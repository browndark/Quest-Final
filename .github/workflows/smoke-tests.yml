name: CI - Smoke Tests (RÃ¡pido)

on:
  push:
    branches: [ main, atualizacao3.0, AtualizaÃ§Ã£o3.1 ]
  pull_request:
    branches: [ main ]
  schedule:
    # Executar diariamente Ã s 9h UTC (6h BRT)
    - cron: '0 9 * * *'

jobs:
  smoke-tests:
    name: Testes Smoke RÃ¡pidos
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: ðŸ“¥ Checkout
        uses: actions/checkout@v4
      
      - name: ðŸŸ¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: ðŸ“¦ Instalar dependÃªncias backend
        working-directory: ./cinema-challenge-back
        run: npm ci
      
      - name: ðŸ§ª Testes Jest (apenas unit)
        working-directory: ./cinema-challenge-back
        run: npm test -- --testPathPattern=unit --coverage
        env:
          NODE_ENV: test
          JWT_SECRET: smoke-test-secret
      
      - name: ðŸ“Š Upload cobertura
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: smoke-coverage
          path: cinema-challenge-back/coverage/lcov-report/
          retention-days: 7
      
      - name: ðŸš€ Iniciar servidor
        working-directory: ./cinema-challenge-back
        run: |
          npm start &
          sleep 10
        env:
          PORT: 5000
          NODE_ENV: test
          JWT_SECRET: smoke-secret
          MONGODB_URI: ""
      
      - name: âœ… Health Check
        run: |
          response=$(curl -s http://localhost:5000/api/v1/health)
          echo "Health check response: $response"
          echo $response | grep -q "healthy" || exit 1
      
      - name: ðŸ“¦ Instalar Newman
        run: npm install -g newman
      
      - name: ðŸ§ª Newman Smoke Test (apenas health)
        run: |
          newman run postman-test/postman-back/test-back.postman_collection.json \
            --folder "Health Check" \
            --bail \
            --color on
        continue-on-error: true
      
      - name: âœ… Resultado
        if: always()
        run: |
          echo "# âœ… Smoke Tests ConcluÃ­dos" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Testes rÃ¡pidos executados com sucesso!" >> $GITHUB_STEP_SUMMARY
          echo "Para testes completos, veja o workflow 'CI/CD - Testes Automatizados'" >> $GITHUB_STEP_SUMMARY
