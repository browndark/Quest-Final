{
  "info": {
    "name": "Cinema Challenge - Backend API Full Testing Collection",
    "_postman_id": "e9f8d7c6-0000-4000-8000-000000000000",
    "description": "Coleção para validar endpoints básicos e executar fluxos e casos de teste técnicos (null, boundary, injection, negative, concurrency).",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    { "key": "base_api", "value": "http://localhost:5000/api/v1", "type": "string" },
    { "key": "auth_token", "value": "", "type": "string" },
    { "key": "movie_id", "value": "", "type": "string" },
    { "key": "theater_id", "value": "", "type": "string" },
    { "key": "session_id", "value": "", "type": "string" },
    { "key": "reservation_id", "value": "", "type": "string" }
  ],
  "item": [
    { "name": "API - GET /health", "request": { "method": "GET", "header": [], "url": { "raw": "{{base_api}}/health", "host": ["{{base_api}}"], "path": ["health"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('health returns 200', function () { pm.response.to.have.status(200); });"] } }] },

    { "name": "API - GET /movies", "request": { "method": "GET", "header": [], "url": { "raw": "{{base_api}}/movies", "host": ["{{base_api}}"], "path": ["movies"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('movies returns 200', function () { pm.response.to.have.status(200); });","try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"] } }] },

    { "name": "API - POST /setup/test-users (create test users)", "request": { "method": "POST", "header": [{"key":"Content-Type","value":"application/json"}], "body": { "mode": "raw", "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }" }, "url": { "raw": "{{base_api}}/setup/test-users", "host": ["{{base_api}}"], "path": ["setup","test-users"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });","try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"] } }] },

    { "name": "API - POST /auth/login (admin)", "request": { "method": "POST", "header": [{"key":"Content-Type","value":"application/json"}], "body": { "mode": "raw", "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }" }, "url": { "raw": "{{base_api}}/auth/login", "host": ["{{base_api}}"], "path": ["auth","login"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });","try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"] } }] },

    { "name": "API - POST /auth/login (empty payload) - NULL TEST", "request": { "method": "POST", "header": [{"key":"Content-Type","value":"application/json"}], "body": { "mode": "raw", "raw": "{}" }, "url": { "raw": "{{base_api}}/auth/login", "host": ["{{base_api}}"], "path": ["auth","login"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"] } }] },

    { "name": "API - POST /auth/login (injection) - FUZZ/INJECTION", "request": { "method": "POST", "header": [{"key":"Content-Type","value":"application/json"}], "body": { "mode": "raw", "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }" }, "url": { "raw": "{{base_api}}/auth/login", "host": ["{{base_api}}"], "path": ["auth","login"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"] } }] },

    { "name": "API - POST /movies (null title) - NULL/BVA", "request": { "method": "POST", "header": [{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer {{auth_token}}"}], "body": { "mode": "raw", "raw": "{ \"title\": null, \"duration\": 120 }" }, "url": { "raw": "{{base_api}}/movies", "host": ["{{base_api}}"], "path": ["movies"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"] } }] },

    { "name": "API - POST /movies (boundary durations) - BOUNDARY", "request": { "method": "POST", "header": [{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer {{auth_token}}"}], "body": { "mode": "raw", "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }" }, "url": { "raw": "{{base_api}}/movies", "host": ["{{base_api}}"], "path": ["movies"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"] } }] },

    { "name": "API - POST /movies (very long title) - FUZZ", "request": { "method": "POST", "header": [{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer {{auth_token}}"}], "body": { "mode": "raw", "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }" }, "url": { "raw": "{{base_api}}/movies", "host": ["{{base_api}}"], "path": ["movies"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"] } }] },

    { "name": "API - POST /movies (create movie) [requires admin]", "request": { "method": "POST", "header": [{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer {{auth_token}}"}], "body": { "mode": "raw", "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }" }, "url": { "raw": "{{base_api}}/movies", "host": ["{{base_api}}"], "path": ["movies"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });","try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"] } }] },

    { "name": "API - GET /movies/:id (invalid id) - NEGATIVE", "request": { "method": "GET", "header": [], "url": { "raw": "{{base_api}}/movies/invalid-id-123", "host": ["{{base_api}}"], "path": ["movies","invalid-id-123"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"] } }] },

    { "name": "API - POST /theaters (create theater) [requires admin]", "request": { "method": "POST", "header": [{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer {{auth_token}}"}], "body": { "mode": "raw", "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }" }, "url": { "raw": "{{base_api}}/theaters", "host": ["{{base_api}}"], "path": ["theaters"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });","try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"] } }] },

    { "name": "API - POST /sessions (create session) [requires admin]", "request": { "method": "POST", "header": [{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer {{auth_token}}"}], "body": { "mode": "raw", "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }" }, "url": { "raw": "{{base_api}}/sessions", "host": ["{{base_api}}"], "path": ["sessions"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });","try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"] } }] },

    { "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE", "request": { "method": "POST", "header": [{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer {{auth_token}}"}], "body": { "mode": "raw", "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }" }, "url": { "raw": "{{base_api}}/sessions", "host": ["{{base_api}}"], "path": ["sessions"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"] } }] },

    { "name": "API - POST /reservations (missing seats) - NULL", "request": { "method": "POST", "header": [{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer {{auth_token}}"}], "body": { "mode": "raw", "raw": "{ \"sessionId\": \"{{session_id}}\" }" }, "url": { "raw": "{{base_api}}/reservations", "host": ["{{base_api}}"], "path": ["reservations"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"] } }] },

    { "name": "API - POST /reservations (create reservation) [requires auth]", "request": { "method": "POST", "header": [{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer {{auth_token}}"}], "body": { "mode": "raw", "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }" }, "url": { "raw": "{{base_api}}/reservations", "host": ["{{base_api}}"], "path": ["reservations"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });","try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"] } }] },

    { "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE", "request": { "method": "POST", "header": [{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer {{auth_token}}"}], "body": { "mode": "raw", "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }" }, "url": { "raw": "{{base_api}}/reservations", "host": ["{{base_api}}"], "path": ["reservations"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"] } }] },

    { "name": "API - GET /reservations (list)", "request": { "method": "GET", "header": [{"key":"Authorization","value":"Bearer {{auth_token}}"}], "url": { "raw": "{{base_api}}/reservations", "host": ["{{base_api}}"], "path": ["reservations"] } }, "event": [{ "listen": "test", "script": { "exec": ["pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });","try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"] } }] }
  ]
}
