{
  "collection": {
    "_": {
      "postman_id": "e9f8d7c6-0000-4000-8000-000000000000"
    },
    "item": [
      {
        "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
        "name": "API - GET /health",
        "request": {
          "url": {
            "path": [
              "health"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e2aa4075-057a-47f8-b2bd-b3b4b0d7ff77",
              "type": "text/javascript",
              "exec": [
                "pm.test('health returns 200', function () { pm.response.to.have.status(200); });"
              ],
              "_lastExecutionId": "e711791b-580a-46ff-9551-727904b212ac"
            }
          }
        ]
      },
      {
        "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
        "name": "API - GET /movies",
        "request": {
          "url": {
            "path": [
              "movies"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3d4d1fcf-3b7e-4ca7-9187-ac9886f392ab",
              "type": "text/javascript",
              "exec": [
                "pm.test('movies returns 200', function () { pm.response.to.have.status(200); });",
                "try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
              ],
              "_lastExecutionId": "4659531d-4da7-41ad-bfd8-b10625e12968"
            }
          }
        ]
      },
      {
        "id": "af811459-8096-4490-9f2b-a97cf46e288d",
        "name": "API - POST /setup/test-users (create test users)",
        "request": {
          "url": {
            "path": [
              "setup",
              "test-users"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7dd02e41-0704-41f6-bea9-6cd8c62ef7fb",
              "type": "text/javascript",
              "exec": [
                "pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                "try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
              ],
              "_lastExecutionId": "49b492ac-2764-480f-a302-186cf37ce0e8"
            }
          }
        ]
      },
      {
        "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
        "name": "API - POST /auth/login (admin)",
        "request": {
          "url": {
            "path": [
              "auth",
              "login"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
              "type": "text/javascript",
              "exec": [
                "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
              ],
              "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
            }
          }
        ]
      },
      {
        "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
        "name": "API - POST /auth/login (empty payload) - NULL TEST",
        "request": {
          "url": {
            "path": [
              "auth",
              "login"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "abc936d3-ef0b-4374-a9c5-14d503be10c0",
              "type": "text/javascript",
              "exec": [
                "pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"
              ],
              "_lastExecutionId": "141bcf06-598a-40c7-a610-6ff6b32fd4d2"
            }
          }
        ]
      },
      {
        "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
        "name": "API - POST /auth/login (injection) - FUZZ/INJECTION",
        "request": {
          "url": {
            "path": [
              "auth",
              "login"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e0af1949-f4bd-4b56-a5db-dc1af5f95ed7",
              "type": "text/javascript",
              "exec": [
                "pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"
              ],
              "_lastExecutionId": "326c438b-7b5e-4420-9c16-19d51e627a9f"
            }
          }
        ]
      },
      {
        "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
        "name": "API - POST /movies (null title) - NULL/BVA",
        "request": {
          "url": {
            "path": [
              "movies"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"title\": null, \"duration\": 120 }"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
              "type": "text/javascript",
              "exec": [
                "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
              ],
              "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
            }
          }
        ]
      },
      {
        "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
        "name": "API - POST /movies (boundary durations) - BOUNDARY",
        "request": {
          "url": {
            "path": [
              "movies"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
              "type": "text/javascript",
              "exec": [
                "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
              ],
              "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
            }
          }
        ]
      },
      {
        "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
        "name": "API - POST /movies (very long title) - FUZZ",
        "request": {
          "url": {
            "path": [
              "movies"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c73ae8aa-32b0-419c-a5e4-584566fbfdcc",
              "type": "text/javascript",
              "exec": [
                "pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"
              ],
              "_lastExecutionId": "d623c666-babc-4f5e-882d-480e7bddede6"
            }
          }
        ]
      },
      {
        "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
        "name": "API - POST /movies (create movie) [requires admin]",
        "request": {
          "url": {
            "path": [
              "movies"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
              "type": "text/javascript",
              "exec": [
                "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
              ],
              "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
            }
          }
        ]
      },
      {
        "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
        "name": "API - GET /movies/:id (invalid id) - NEGATIVE",
        "request": {
          "url": {
            "path": [
              "movies",
              "invalid-id-123"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "547cba97-19e3-46f7-a1ac-52a986b856d6",
              "type": "text/javascript",
              "exec": [
                "pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
              ],
              "_lastExecutionId": "eb0b3e6a-34db-49e8-8d7e-12bed3c961a8"
            }
          }
        ]
      },
      {
        "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
        "name": "API - POST /theaters (create theater) [requires admin]",
        "request": {
          "url": {
            "path": [
              "theaters"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "378c6806-f62a-4e74-9187-1a91a505c236",
              "type": "text/javascript",
              "exec": [
                "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
              ],
              "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
            }
          }
        ]
      },
      {
        "id": "44768877-6703-451c-9997-c0841a9dc152",
        "name": "API - POST /sessions (create session) [requires admin]",
        "request": {
          "url": {
            "path": [
              "sessions"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
              "type": "text/javascript",
              "exec": [
                "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
              ],
              "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
            }
          }
        ]
      },
      {
        "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
        "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
        "request": {
          "url": {
            "path": [
              "sessions"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
              "type": "text/javascript",
              "exec": [
                "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
              ],
              "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
            }
          }
        ]
      },
      {
        "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
        "name": "API - POST /reservations (missing seats) - NULL",
        "request": {
          "url": {
            "path": [
              "reservations"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"sessionId\": \"{{session_id}}\" }"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
              "type": "text/javascript",
              "exec": [
                "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
              ],
              "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
            }
          }
        ]
      },
      {
        "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
        "name": "API - POST /reservations (create reservation) [requires auth]",
        "request": {
          "url": {
            "path": [
              "reservations"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
              "type": "text/javascript",
              "exec": [
                "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
              ],
              "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
            }
          }
        ]
      },
      {
        "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
        "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
        "request": {
          "url": {
            "path": [
              "reservations"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
              "type": "text/javascript",
              "exec": [
                "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
              ],
              "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
            }
          }
        ]
      },
      {
        "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
        "name": "API - GET /reservations (list)",
        "request": {
          "url": {
            "path": [
              "reservations"
            ],
            "host": [
              "{{base_api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{auth_token}}"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
              "type": "text/javascript",
              "exec": [
                "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
              ],
              "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [
      {
        "type": "string",
        "value": "http://localhost:5000/api/v1",
        "key": "base_api"
      },
      {
        "type": "string",
        "value": "",
        "key": "auth_token"
      },
      {
        "type": "string",
        "value": "",
        "key": "movie_id"
      },
      {
        "type": "string",
        "value": "",
        "key": "theater_id"
      },
      {
        "type": "string",
        "value": "",
        "key": "session_id"
      },
      {
        "type": "string",
        "value": "",
        "key": "reservation_id"
      }
    ],
    "info": {
      "_postman_id": "e9f8d7c6-0000-4000-8000-000000000000",
      "name": "Cinema Challenge - Backend API Full Testing Collection",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Coleção para validar endpoints básicos e executar fluxos e casos de teste técnicos (null, boundary, injection, negative, concurrency).",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "b2cbf0ed-b655-4202-964b-0c807596ed48",
    "values": []
  },
  "globals": {
    "id": "fce77ac0-5c70-4dbb-a404-27860cede851",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 23,
        "pending": 0,
        "failed": 13
      },
      "testScripts": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 11.111111111111112,
      "responseMin": 1,
      "responseMax": 140,
      "responseSd": 31.509943560880536,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1761433256771,
      "completed": 1761433258567
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 18,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3766b103-b22f-4158-819b-307d9a1d0fbe",
          "httpRequestId": "e8f5ae40-7210-4268-a348-5c487a4974e5"
        },
        "item": {
          "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
          "name": "API - GET /health",
          "request": {
            "url": {
              "path": [
                "health"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e2aa4075-057a-47f8-b2bd-b3b4b0d7ff77",
                "type": "text/javascript",
                "exec": [
                  "pm.test('health returns 200', function () { pm.response.to.have.status(200); });"
                ],
                "_lastExecutionId": "e711791b-580a-46ff-9551-727904b212ac"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "health"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3941a024-5562-4b39-82f2-fa5da8e902cf",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "43c1e259-6edb-4526-be5f-3fce43d1a883",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "30"
            },
            {
              "key": "ETag",
              "value": "W/\"1e-Q31DsHbYGxSDxCO+tj0s0hAiNZg\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:56 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              111,
              107,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 19,
          "responseSize": 30
        },
        "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
        "assertions": [
          {
            "assertion": "health returns 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "62383fe4-dc8f-4f3d-9905-422a18f2b844",
          "length": 18,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f0485b34-6a67-4e6b-ab3c-ce72b3dc3bd0"
        },
        "item": {
          "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
          "name": "API - GET /movies",
          "request": {
            "url": {
              "path": [
                "movies"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d4d1fcf-3b7e-4ca7-9187-ac9886f392ab",
                "type": "text/javascript",
                "exec": [
                  "pm.test('movies returns 200', function () { pm.response.to.have.status(200); });",
                  "try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                ],
                "_lastExecutionId": "4659531d-4da7-41ad-bfd8-b10625e12968"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "movies"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7be77d17-5575-4c7e-a388-94c6d8233e87",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "b3584777-46f4-49aa-a3f2-a4d1b448280a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "1075"
            },
            {
              "key": "ETag",
              "value": "W/\"433-Hc50KHhaStSQRAJsbEoYkO7apEQ\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:56 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              51,
              44,
              34,
              112,
              97,
              103,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              54,
              56,
              102,
              98,
              99,
              49,
              101,
              52,
              56,
              51,
              51,
              97,
              52,
              57,
              101,
              99,
              99,
              53,
              100,
              56,
              55,
              100,
              98,
              101,
              34,
              44,
              34,
              99,
              117,
              115,
              116,
              111,
              109,
              73,
              100,
              34,
              58,
              34,
              50,
              34,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              65,
              118,
              101,
              110,
              103,
              101,
              114,
              115,
              34,
              44,
              34,
              115,
              121,
              110,
              111,
              112,
              115,
              105,
              115,
              34,
              58,
              34,
              69,
              97,
              114,
              116,
              104,
              39,
              115,
              32,
              109,
              105,
              103,
              104,
              116,
              105,
              101,
              115,
              116,
              32,
              104,
              101,
              114,
              111,
              101,
              115,
              32,
              109,
              117,
              115,
              116,
              32,
              99,
              111,
              109,
              101,
              32,
              116,
              111,
              103,
              101,
              116,
              104,
              101,
              114,
              32,
              116,
              111,
              32,
              115,
              97,
              118,
              101,
              32,
              116,
              104,
              101,
              32,
              119,
              111,
              114,
              108,
              100,
              46,
              34,
              44,
              34,
              100,
              105,
              114,
              101,
              99,
              116,
              111,
              114,
              34,
              58,
              34,
              74,
              111,
              115,
              115,
              32,
              87,
              104,
              101,
              100,
              111,
              110,
              34,
              44,
              34,
              103,
              101,
              110,
              114,
              101,
              115,
              34,
              58,
              91,
              34,
              65,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              65,
              100,
              118,
              101,
              110,
              116,
              117,
              114,
              101,
              34,
              93,
              44,
              34,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              49,
              52,
              51,
              44,
              34,
              99,
              108,
              97,
              115,
              115,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              80,
              71,
              45,
              49,
              51,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              101,
              114,
              34,
              58,
              34,
              97,
              118,
              101,
              110,
              103,
              101,
              114,
              115,
              46,
              106,
              112,
              103,
              34,
              44,
              34,
              114,
              101,
              108,
              101,
              97,
              115,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              49,
              50,
              45,
              48,
              53,
              45,
              48,
              52,
              84,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              56,
              102,
              98,
              99,
              49,
              101,
              52,
              56,
              51,
              51,
              97,
              52,
              57,
              101,
              99,
              99,
              53,
              100,
              56,
              55,
              100,
              98,
              101,
              34,
              125,
              44,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              54,
              56,
              102,
              98,
              99,
              49,
              101,
              52,
              56,
              51,
              51,
              97,
              52,
              57,
              101,
              99,
              99,
              53,
              100,
              56,
              55,
              100,
              98,
              100,
              34,
              44,
              34,
              99,
              117,
              115,
              116,
              111,
              109,
              73,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              73,
              110,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              121,
              110,
              111,
              112,
              115,
              105,
              115,
              34,
              58,
              34,
              65,
              32,
              116,
              104,
              105,
              101,
              102,
              32,
              119,
              104,
              111,
              32,
              101,
              110,
              116,
              101,
              114,
              115,
              32,
              116,
              104,
              101,
              32,
              100,
              114,
              101,
              97,
              109,
              115,
              32,
              111,
              102,
              32,
              111,
              116,
              104,
              101,
              114,
              115,
              32,
              116,
              111,
              32,
              115,
              116,
              101,
              97,
              108,
              32,
              116,
              104,
              101,
              105,
              114,
              32,
              115,
              101,
              99,
              114,
              101,
              116,
              115,
              46,
              34,
              44,
              34,
              100,
              105,
              114,
              101,
              99,
              116,
              111,
              114,
              34,
              58,
              34,
              67,
              104,
              114,
              105,
              115,
              116,
              111,
              112,
              104,
              101,
              114,
              32,
              78,
              111,
              108,
              97,
              110,
              34,
              44,
              34,
              103,
              101,
              110,
              114,
              101,
              115,
              34,
              58,
              91,
              34,
              83,
              99,
              105,
              101,
              110,
              99,
              101,
              32,
              70,
              105,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              65,
              99,
              116,
              105,
              111,
              110,
              34,
              93,
              44,
              34,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              49,
              52,
              56,
              44,
              34,
              99,
              108,
              97,
              115,
              115,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              80,
              71,
              45,
              49,
              51,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              101,
              114,
              34,
              58,
              34,
              105,
              110,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              46,
              106,
              112,
              103,
              34,
              44,
              34,
              114,
              101,
              108,
              101,
              97,
              115,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              49,
              48,
              45,
              48,
              55,
              45,
              49,
              54,
              84,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              56,
              102,
              98,
              99,
              49,
              101,
              52,
              56,
              51,
              51,
              97,
              52,
              57,
              101,
              99,
              99,
              53,
              100,
              56,
              55,
              100,
              98,
              100,
              34,
              125,
              44,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              54,
              56,
              102,
              98,
              99,
              49,
              101,
              52,
              56,
              51,
              51,
              97,
              52,
              57,
              101,
              99,
              99,
              53,
              100,
              56,
              55,
              100,
              98,
              102,
              34,
              44,
              34,
              99,
              117,
              115,
              116,
              111,
              109,
              73,
              100,
              34,
              58,
              34,
              51,
              34,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              83,
              104,
              97,
              119,
              115,
              104,
              97,
              110,
              107,
              32,
              82,
              101,
              100,
              101,
              109,
              112,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              121,
              110,
              111,
              112,
              115,
              105,
              115,
              34,
              58,
              34,
              84,
              119,
              111,
              32,
              105,
              109,
              112,
              114,
              105,
              115,
              111,
              110,
              101,
              100,
              32,
              109,
              101,
              110,
              32,
              98,
              111,
              110,
              100,
              32,
              111,
              118,
              101,
              114,
              32,
              97,
              32,
              110,
              117,
              109,
              98,
              101,
              114,
              32,
              111,
              102,
              32,
              121,
              101,
              97,
              114,
              115,
              46,
              34,
              44,
              34,
              100,
              105,
              114,
              101,
              99,
              116,
              111,
              114,
              34,
              58,
              34,
              70,
              114,
              97,
              110,
              107,
              32,
              68,
              97,
              114,
              97,
              98,
              111,
              110,
              116,
              34,
              44,
              34,
              103,
              101,
              110,
              114,
              101,
              115,
              34,
              58,
              91,
              34,
              68,
              114,
              97,
              109,
              97,
              34,
              93,
              44,
              34,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              49,
              52,
              50,
              44,
              34,
              99,
              108,
              97,
              115,
              115,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              82,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              101,
              114,
              34,
              58,
              34,
              115,
              104,
              97,
              119,
              115,
              104,
              97,
              110,
              107,
              46,
              106,
              112,
              103,
              34,
              44,
              34,
              114,
              101,
              108,
              101,
              97,
              115,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              49,
              57,
              57,
              52,
              45,
              49,
              48,
              45,
              49,
              52,
              84,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              56,
              102,
              98,
              99,
              49,
              101,
              52,
              56,
              51,
              51,
              97,
              52,
              57,
              101,
              99,
              99,
              53,
              100,
              56,
              55,
              100,
              98,
              102,
              34,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 1075
        },
        "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
        "assertions": [
          {
            "assertion": "movies returns 200",
            "skipped": false
          },
          {
            "assertion": "movies returns array or object",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8f50341c-8c62-44e2-b2f0-025635d29d30",
          "length": 18,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3b4b3127-d4b6-4e67-8907-c5e6ebd6ef8d"
        },
        "item": {
          "id": "af811459-8096-4490-9f2b-a97cf46e288d",
          "name": "API - POST /setup/test-users (create test users)",
          "request": {
            "url": {
              "path": [
                "setup",
                "test-users"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7dd02e41-0704-41f6-bea9-6cd8c62ef7fb",
                "type": "text/javascript",
                "exec": [
                  "pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                  "try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                ],
                "_lastExecutionId": "49b492ac-2764-480f-a302-186cf37ce0e8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "setup",
              "test-users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fc055608-91fe-41cc-9b74-278facebf801",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "85",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
          }
        },
        "response": {
          "id": "64e4cc34-6354-4a29-892e-fda7b563c4e3",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "195"
            },
            {
              "key": "ETag",
              "value": "W/\"c3-kzrjeD3q99vf6hs8O76TjLvtl0o\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:57 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              69,
              110,
              115,
              117,
              114,
              101,
              100,
              32,
              50,
              32,
              116,
              101,
              115,
              116,
              32,
              117,
              115,
              101,
              114,
              40,
              115,
              41,
              32,
              101,
              120,
              105,
              115,
              116,
              32,
              97,
              110,
              100,
              32,
              104,
              97,
              118,
              101,
              32,
              99,
              111,
              114,
              114,
              101,
              99,
              116,
              32,
              99,
              114,
              101,
              100,
              101,
              110,
              116,
              105,
              97,
              108,
              115,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              34,
              58,
              91,
              123,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              64,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125,
              44,
              123,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              97,
              100,
              109,
              105,
              110,
              64,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              97,
              100,
              109,
              105,
              110,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 140,
          "responseSize": 195
        },
        "id": "af811459-8096-4490-9f2b-a97cf46e288d",
        "assertions": [
          {
            "assertion": "setup test-users returns 200/201",
            "skipped": false
          },
          {
            "assertion": "setup returns JSON",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "af2d827f-16f0-4958-ad98-276dc39fa060",
          "length": 18,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b7a7be4d-83d6-43ee-9a9c-5cf92b47fb2e"
        },
        "item": {
          "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
          "name": "API - POST /auth/login (admin)",
          "request": {
            "url": {
              "path": [
                "auth",
                "login"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                "type": "text/javascript",
                "exec": [
                  "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                  "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                ],
                "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "auth",
              "login"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1f466f75-da34-4e2d-9474-32650ed02616",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "51",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
          }
        },
        "response": {
          "id": "e69c8db4-519b-4701-93de-8ef740be10f3",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "55"
            },
            {
              "key": "ETag",
              "value": "W/\"37-5uDpJTljPBecOPs/j7OXFdPRcmQ\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:57 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              101,
              109,
              97,
              105,
              108,
              32,
              111,
              114,
              32,
              112,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 55
        },
        "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
        "assertions": [
          {
            "assertion": "login returns 200/201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "login returns 200/201",
              "message": "expected 401 to be one of [ 200, 201 ]",
              "stack": "AssertionError: expected 401 to be one of [ 200, 201 ]\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "login returns token",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "login returns token",
              "message": "expected { success: false, …(1) } to have property 'token'",
              "stack": "AssertionError: expected { success: false, …(1) } to have property 'token'\n   at Object.eval sandbox-script.js:2:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "63e82d96-c8b9-4570-9c49-629dc7ea0c31",
          "length": 18,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a37b43d8-ccc4-4897-a418-ba8a939055eb"
        },
        "item": {
          "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
          "name": "API - POST /auth/login (empty payload) - NULL TEST",
          "request": {
            "url": {
              "path": [
                "auth",
                "login"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "abc936d3-ef0b-4374-a9c5-14d503be10c0",
                "type": "text/javascript",
                "exec": [
                  "pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"
                ],
                "_lastExecutionId": "141bcf06-598a-40c7-a610-6ff6b32fd4d2"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "auth",
              "login"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "be47be04-578c-402d-aad6-864e9ad0d7da",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "2",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{}"
          }
        },
        "response": {
          "id": "2d9facbe-0ec8-48e6-9018-06822a69e3e8",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "55"
            },
            {
              "key": "ETag",
              "value": "W/\"37-5uDpJTljPBecOPs/j7OXFdPRcmQ\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:57 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              101,
              109,
              97,
              105,
              108,
              32,
              111,
              114,
              32,
              112,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 55
        },
        "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
        "assertions": [
          {
            "assertion": "empty login returns 400/401",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9a5e4374-bc17-4460-a5e1-4f30e638b608",
          "length": 18,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "da0d5d68-1397-4ab5-8b38-40877af13758"
        },
        "item": {
          "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
          "name": "API - POST /auth/login (injection) - FUZZ/INJECTION",
          "request": {
            "url": {
              "path": [
                "auth",
                "login"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e0af1949-f4bd-4b56-a5db-dc1af5f95ed7",
                "type": "text/javascript",
                "exec": [
                  "pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"
                ],
                "_lastExecutionId": "326c438b-7b5e-4420-9c16-19d51e627a9f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "auth",
              "login"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ed46b4a4-71a7-43da-8439-0b3b82bbb8d5",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "53",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
          }
        },
        "response": {
          "id": "d85cb2de-a02d-4d29-8893-4ab0376bb7ee",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "55"
            },
            {
              "key": "ETag",
              "value": "W/\"37-5uDpJTljPBecOPs/j7OXFdPRcmQ\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:57 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              101,
              109,
              97,
              105,
              108,
              32,
              111,
              114,
              32,
              112,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 55
        },
        "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
        "assertions": [
          {
            "assertion": "injection attempt should not return 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ba84c54d-7e8d-4a7e-83f4-d90ea5a59bf1",
          "length": 18,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ac8958c3-58a1-4e40-b3bc-fa5688727cdf"
        },
        "item": {
          "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
          "name": "API - POST /movies (null title) - NULL/BVA",
          "request": {
            "url": {
              "path": [
                "movies"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"title\": null, \"duration\": 120 }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
                "type": "text/javascript",
                "exec": [
                  "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                ],
                "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "movies"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer "
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8ee31c98-0b71-459c-a249-029707c265a3",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "34",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"title\": null, \"duration\": 120 }"
          }
        },
        "response": {
          "id": "56907d7b-86a5-488a-aafe-424085f17edb",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "65"
            },
            {
              "key": "ETag",
              "value": "W/\"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:57 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              116,
              111,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              104,
              105,
              115,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2,
          "responseSize": 65
        },
        "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
        "assertions": [
          {
            "assertion": "null title returns 400 or 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "null title returns 400 or 422",
              "message": "expected 401 to be one of [ 400, 422 ]",
              "stack": "AssertionError: expected 401 to be one of [ 400, 422 ]\n   at Object.eval sandbox-script.js:1:7)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "729592e7-eccb-4995-92c0-e1260f6a509c",
          "length": 18,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c4d96912-e62a-4d05-8b16-90bfef1224e2"
        },
        "item": {
          "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
          "name": "API - POST /movies (boundary durations) - BOUNDARY",
          "request": {
            "url": {
              "path": [
                "movies"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
                "type": "text/javascript",
                "exec": [
                  "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
                ],
                "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "movies"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer "
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6210a33a-4ed3-491a-82b5-0135035879ff",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "46",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
          }
        },
        "response": {
          "id": "1ac00e0b-542d-4158-a826-b9c2bbe093e8",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "65"
            },
            {
              "key": "ETag",
              "value": "W/\"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:57 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              116,
              111,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              104,
              105,
              115,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2,
          "responseSize": 65
        },
        "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
        "assertions": [
          {
            "assertion": "duration 0 returns 400 or 201 depending on validation",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "duration 0 returns 400 or 201 depending on validation",
              "message": "expected 401 to be one of [ 200, 201, 400, 422 ]",
              "stack": "AssertionError: expected 401 to be one of [ 200, 201, 400, 422 ]\n   at Object.eval sandbox-script.js:1:8)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "a0f77c38-7205-44fe-87a9-89bf3caf94fe",
          "length": 18,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "79fa8bcd-13b8-41cb-bb84-81dc38cd999a"
        },
        "item": {
          "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
          "name": "API - POST /movies (very long title) - FUZZ",
          "request": {
            "url": {
              "path": [
                "movies"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c73ae8aa-32b0-419c-a5e4-584566fbfdcc",
                "type": "text/javascript",
                "exec": [
                  "pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"
                ],
                "_lastExecutionId": "d623c666-babc-4f5e-882d-480e7bddede6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "movies"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer "
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f8d1f2f5-b3fc-4a31-9082-3605079768a9",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "400",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
          }
        },
        "response": {
          "id": "7042aadd-2258-468e-82a4-5ad29ddb3f00",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "65"
            },
            {
              "key": "ETag",
              "value": "W/\"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:57 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              116,
              111,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              104,
              105,
              115,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 3,
          "responseSize": 65
        },
        "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
        "assertions": [
          {
            "assertion": "very long title should not crash server (check not 500)",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f6899faf-6e35-4fff-93a4-b3c8aac8d6ab",
          "length": 18,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5a655388-c19f-4f4e-84c8-25e73b4c67b4"
        },
        "item": {
          "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
          "name": "API - POST /movies (create movie) [requires admin]",
          "request": {
            "url": {
              "path": [
                "movies"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                  "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                ],
                "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "movies"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer "
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "241aaab3-8eae-4dad-8265-afe8256135af",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "77",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
          }
        },
        "response": {
          "id": "37f16258-52f6-492f-83f8-8872b77272a0",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "65"
            },
            {
              "key": "ETag",
              "value": "W/\"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:57 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              116,
              111,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              104,
              105,
              115,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2,
          "responseSize": 65
        },
        "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
        "assertions": [
          {
            "assertion": "create movie returns 201 or 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "create movie returns 201 or 200",
              "message": "expected 401 to be one of [ 200, 201 ]",
              "stack": "AssertionError: expected 401 to be one of [ 200, 201 ]\n   at Object.eval sandbox-script.js:1:10)"
            }
          },
          {
            "assertion": "movie created captures id",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "movie created captures id",
              "message": "expected undefined to be truthy",
              "stack": "AssertionError: expected undefined to be truthy\n   at Object.eval sandbox-script.js:2:10)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "c47b8464-36e5-4f08-8b75-d9b2b173aeed",
          "length": 18,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f9d842c7-9d1f-4626-877f-97d655bcc992"
        },
        "item": {
          "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
          "name": "API - GET /movies/:id (invalid id) - NEGATIVE",
          "request": {
            "url": {
              "path": [
                "movies",
                "invalid-id-123"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "547cba97-19e3-46f7-a1ac-52a986b856d6",
                "type": "text/javascript",
                "exec": [
                  "pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                ],
                "_lastExecutionId": "eb0b3e6a-34db-49e8-8d7e-12bed3c961a8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "movies",
              "invalid-id-123"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f1ab64e0-3369-4d78-9a75-97167b600cbe",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "4af9bf68-1ecc-48ac-bf2f-728966f3628b",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "45"
            },
            {
              "key": "ETag",
              "value": "W/\"2d-76yzoZ3aJF1oDN8vFKpqErDRmpM\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:57 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              77,
              111,
              118,
              105,
              101,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 3,
          "responseSize": 45
        },
        "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
        "assertions": [
          {
            "assertion": "invalid id returns 400/404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0c4f604f-2b20-4599-bb55-8bd39d131367",
          "length": 18,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7603a456-f327-4df2-92db-77c08a2a128b"
        },
        "item": {
          "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
          "name": "API - POST /theaters (create theater) [requires admin]",
          "request": {
            "url": {
              "path": [
                "theaters"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "378c6806-f62a-4e74-9187-1a91a505c236",
                "type": "text/javascript",
                "exec": [
                  "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                  "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
                ],
                "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "theaters"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer "
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "48542b8c-f5fb-4b91-a79d-310f890e83f1",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "48",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
          }
        },
        "response": {
          "id": "ecf411e8-ab18-4d53-8a61-a63d4e4709be",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "65"
            },
            {
              "key": "ETag",
              "value": "W/\"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:57 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              116,
              111,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              104,
              105,
              115,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2,
          "responseSize": 65
        },
        "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
        "assertions": [
          {
            "assertion": "create theater returns 201 or 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "create theater returns 201 or 200",
              "message": "expected 401 to be one of [ 200, 201 ]",
              "stack": "AssertionError: expected 401 to be one of [ 200, 201 ]\n   at Object.eval sandbox-script.js:1:12)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b86a3862-68f8-4614-a346-b6b9c51ac95b",
          "length": 18,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4c1e321e-bfc3-43fd-a270-9377fc223c5e"
        },
        "item": {
          "id": "44768877-6703-451c-9997-c0841a9dc152",
          "name": "API - POST /sessions (create session) [requires admin]",
          "request": {
            "url": {
              "path": [
                "sessions"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
                "type": "text/javascript",
                "exec": [
                  "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                  "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
                ],
                "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "sessions"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer "
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "bfc9e449-a63d-4931-a8bc-0a6de03b5cbc",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "71",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"movieId\": \"\", \"theaterId\": \"\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
          }
        },
        "response": {
          "id": "00e55fde-499a-4200-8b55-5a098e872252",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "65"
            },
            {
              "key": "ETag",
              "value": "W/\"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:58 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              116,
              111,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              104,
              105,
              115,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2,
          "responseSize": 65
        },
        "id": "44768877-6703-451c-9997-c0841a9dc152",
        "assertions": [
          {
            "assertion": "create session returns 201 or 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "create session returns 201 or 200",
              "message": "expected 401 to be one of [ 200, 201 ]",
              "stack": "AssertionError: expected 401 to be one of [ 200, 201 ]\n   at Object.eval sandbox-script.js:1:13)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "459c63aa-81f9-4e83-bbd0-195b72082893",
          "length": 18,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f1126002-46ea-4855-aa6d-fa72857c742f"
        },
        "item": {
          "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
          "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
          "request": {
            "url": {
              "path": [
                "sessions"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
                "type": "text/javascript",
                "exec": [
                  "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                ],
                "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "sessions"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer "
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c47cb750-11ff-4f1a-a93d-d486d8b2e61d",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "105",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
          }
        },
        "response": {
          "id": "4678dd2a-280c-4c17-a1e3-6efd57eb73e2",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "65"
            },
            {
              "key": "ETag",
              "value": "W/\"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:58 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              116,
              111,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              104,
              105,
              115,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2,
          "responseSize": 65
        },
        "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
        "assertions": [
          {
            "assertion": "invalid movie/theater returns 400/404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "invalid movie/theater returns 400/404",
              "message": "expected 401 to be one of [ 400, 404 ]",
              "stack": "AssertionError: expected 401 to be one of [ 400, 404 ]\n   at Object.eval sandbox-script.js:1:14)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "a67fe1c6-be9d-46d1-89f5-2b06cd1257ea",
          "length": 18,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f2a18e41-141c-4da0-b4c8-72e63e36aec2"
        },
        "item": {
          "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
          "name": "API - POST /reservations (missing seats) - NULL",
          "request": {
            "url": {
              "path": [
                "reservations"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"sessionId\": \"{{session_id}}\" }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
                "type": "text/javascript",
                "exec": [
                  "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                ],
                "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "reservations"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer "
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0f891adb-67f0-48c6-9ab5-564bd55c7f32",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "19",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"sessionId\": \"\" }"
          }
        },
        "response": {
          "id": "88eeb30f-d239-42e8-8cb2-43cda33146d5",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "65"
            },
            {
              "key": "ETag",
              "value": "W/\"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:58 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              116,
              111,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              104,
              105,
              115,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1,
          "responseSize": 65
        },
        "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
        "assertions": [
          {
            "assertion": "missing seats returns 400/422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "missing seats returns 400/422",
              "message": "expected 401 to be one of [ 400, 422 ]",
              "stack": "AssertionError: expected 401 to be one of [ 400, 422 ]\n   at Object.eval sandbox-script.js:1:15)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "a131f15f-9d55-4f45-9478-7a67f424ad66",
          "length": 18,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3bed4187-b75f-4761-a1bf-d2b857820400"
        },
        "item": {
          "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
          "name": "API - POST /reservations (create reservation) [requires auth]",
          "request": {
            "url": {
              "path": [
                "reservations"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
                "type": "text/javascript",
                "exec": [
                  "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                  "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
                ],
                "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "reservations"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer "
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "21930d1f-d72f-4623-a91a-61ace4cc99d0",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "36",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"sessionId\": \"\", \"seats\": [\"A1\"] }"
          }
        },
        "response": {
          "id": "c3ca9803-4db6-4e08-ad69-bc751a8a644e",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "65"
            },
            {
              "key": "ETag",
              "value": "W/\"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:58 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              116,
              111,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              104,
              105,
              115,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1,
          "responseSize": 65
        },
        "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
        "assertions": [
          {
            "assertion": "create reservation returns 201 or 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "create reservation returns 201 or 200",
              "message": "expected 401 to be one of [ 200, 201 ]",
              "stack": "AssertionError: expected 401 to be one of [ 200, 201 ]\n   at Object.eval sandbox-script.js:1:16)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "63409093-f09e-4fb5-9cb2-81cf758ad826",
          "length": 18,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1f79bc15-9d51-457a-b885-2199f675de78"
        },
        "item": {
          "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
          "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
          "request": {
            "url": {
              "path": [
                "reservations"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
                "type": "text/javascript",
                "exec": [
                  "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
                ],
                "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "reservations"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer "
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "87ec7682-3b94-494d-8058-a39446bce833",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "36",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{ \"sessionId\": \"\", \"seats\": [\"A1\"] }"
          }
        },
        "response": {
          "id": "0e0baf26-0b8e-4853-8afd-a9a8c033f718",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "65"
            },
            {
              "key": "ETag",
              "value": "W/\"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:58 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              116,
              111,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              104,
              105,
              115,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1,
          "responseSize": 65
        },
        "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
        "assertions": [
          {
            "assertion": "duplicate reservation should not be allowed (expect 4xx)",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "duplicate reservation should not be allowed (expect 4xx)",
              "message": "expected 401 to be one of [ 400, 409, 422 ]",
              "stack": "AssertionError: expected 401 to be one of [ 400, 409, 422 ]\n   at Object.eval sandbox-script.js:1:17)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "ff0b56a5-cbb6-44d3-b4a1-325638d85502",
          "length": 18,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d731b5fb-a04e-400e-b246-ffe085307304"
        },
        "item": {
          "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
          "name": "API - GET /reservations (list)",
          "request": {
            "url": {
              "path": [
                "reservations"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
                "type": "text/javascript",
                "exec": [
                  "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                  "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                ],
                "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "reservations"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer "
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5fe65cb7-e9c0-45a6-885d-8a6aae064713",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "967874fd-35a9-4c99-b13f-c5fa951a53fe",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "65"
            },
            {
              "key": "ETag",
              "value": "W/\"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs\""
            },
            {
              "key": "Date",
              "value": "Sat, 25 Oct 2025 23:00:58 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              116,
              111,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              104,
              105,
              115,
              32,
              114,
              111,
              117,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2,
          "responseSize": 65
        },
        "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
        "assertions": [
          {
            "assertion": "list reservations returns 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "list reservations returns 200",
              "message": "expected response to have status code 200 but got 401",
              "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:18)"
            }
          },
          {
            "assertion": "reservations returns JSON array",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 2225
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "login returns 200/201",
          "message": "expected 401 to be one of [ 200, 201 ]",
          "stack": "AssertionError: expected 401 to be one of [ 200, 201 ]\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "ddc64d341434c4551ca4fe048f8ba1c4",
          "id": "b1442ecc-3557-43f8-9f4b-c0e8a6f1155b",
          "timestamp": 1761433257269,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
          "name": "API - POST /auth/login (admin)",
          "request": {
            "url": {
              "path": [
                "auth",
                "login"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                "type": "text/javascript",
                "exec": [
                  "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                  "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                ],
                "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "e9f8d7c6-0000-4000-8000-000000000000"
          },
          "item": [
            {
              "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
              "name": "API - GET /health",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2aa4075-057a-47f8-b2bd-b3b4b0d7ff77",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('health returns 200', function () { pm.response.to.have.status(200); });"
                    ],
                    "_lastExecutionId": "e711791b-580a-46ff-9551-727904b212ac"
                  }
                }
              ]
            },
            {
              "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
              "name": "API - GET /movies",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d4d1fcf-3b7e-4ca7-9187-ac9886f392ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('movies returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "4659531d-4da7-41ad-bfd8-b10625e12968"
                  }
                }
              ]
            },
            {
              "id": "af811459-8096-4490-9f2b-a97cf46e288d",
              "name": "API - POST /setup/test-users (create test users)",
              "request": {
                "url": {
                  "path": [
                    "setup",
                    "test-users"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dd02e41-0704-41f6-bea9-6cd8c62ef7fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "49b492ac-2764-480f-a302-186cf37ce0e8"
                  }
                }
              ]
            },
            {
              "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
              "name": "API - POST /auth/login (admin)",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                    ],
                    "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
                  }
                }
              ]
            },
            {
              "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
              "name": "API - POST /auth/login (empty payload) - NULL TEST",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "abc936d3-ef0b-4374-a9c5-14d503be10c0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"
                    ],
                    "_lastExecutionId": "141bcf06-598a-40c7-a610-6ff6b32fd4d2"
                  }
                }
              ]
            },
            {
              "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
              "name": "API - POST /auth/login (injection) - FUZZ/INJECTION",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0af1949-f4bd-4b56-a5db-dc1af5f95ed7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"
                    ],
                    "_lastExecutionId": "326c438b-7b5e-4420-9c16-19d51e627a9f"
                  }
                }
              ]
            },
            {
              "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
              "name": "API - POST /movies (null title) - NULL/BVA",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": null, \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
                  }
                }
              ]
            },
            {
              "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
              "name": "API - POST /movies (boundary durations) - BOUNDARY",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
                    ],
                    "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
                  }
                }
              ]
            },
            {
              "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
              "name": "API - POST /movies (very long title) - FUZZ",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c73ae8aa-32b0-419c-a5e4-584566fbfdcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"
                    ],
                    "_lastExecutionId": "d623c666-babc-4f5e-882d-480e7bddede6"
                  }
                }
              ]
            },
            {
              "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
              "name": "API - POST /movies (create movie) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
                  }
                }
              ]
            },
            {
              "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
              "name": "API - GET /movies/:id (invalid id) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "movies",
                    "invalid-id-123"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "547cba97-19e3-46f7-a1ac-52a986b856d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "eb0b3e6a-34db-49e8-8d7e-12bed3c961a8"
                  }
                }
              ]
            },
            {
              "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
              "name": "API - POST /theaters (create theater) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "theaters"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "378c6806-f62a-4e74-9187-1a91a505c236",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
                  }
                }
              ]
            },
            {
              "id": "44768877-6703-451c-9997-c0841a9dc152",
              "name": "API - POST /sessions (create session) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
                  }
                }
              ]
            },
            {
              "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
              "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
                  }
                }
              ]
            },
            {
              "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
              "name": "API - POST /reservations (missing seats) - NULL",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
                  }
                }
              ]
            },
            {
              "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
              "name": "API - POST /reservations (create reservation) [requires auth]",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
                  }
                }
              ]
            },
            {
              "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
              "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
                    ],
                    "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
                  }
                }
              ]
            },
            {
              "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
              "name": "API - GET /reservations (list)",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:5000/api/v1",
              "key": "base_api"
            },
            {
              "type": "string",
              "value": "",
              "key": "auth_token"
            },
            {
              "type": "string",
              "value": "",
              "key": "movie_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "theater_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "session_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "reservation_id"
            }
          ],
          "info": {
            "_postman_id": "e9f8d7c6-0000-4000-8000-000000000000",
            "name": "Cinema Challenge - Backend API Full Testing Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Coleção para validar endpoints básicos e executar fluxos e casos de teste técnicos (null, boundary, injection, negative, concurrency).",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "af2d827f-16f0-4958-ad98-276dc39fa060",
          "length": 18,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b7a7be4d-83d6-43ee-9a9c-5cf92b47fb2e",
          "scriptId": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
          "execution": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "login returns token",
          "message": "expected { success: false, …(1) } to have property 'token'",
          "stack": "AssertionError: expected { success: false, …(1) } to have property 'token'\n   at Object.eval sandbox-script.js:2:4)",
          "checksum": "5a11d205b1298636d6cafb3f0a520035",
          "id": "9886b8f1-e4c1-4bda-a6dd-abe1096f5a4a",
          "timestamp": 1761433257271,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
          "name": "API - POST /auth/login (admin)",
          "request": {
            "url": {
              "path": [
                "auth",
                "login"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                "type": "text/javascript",
                "exec": [
                  "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                  "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                ],
                "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "e9f8d7c6-0000-4000-8000-000000000000"
          },
          "item": [
            {
              "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
              "name": "API - GET /health",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2aa4075-057a-47f8-b2bd-b3b4b0d7ff77",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('health returns 200', function () { pm.response.to.have.status(200); });"
                    ],
                    "_lastExecutionId": "e711791b-580a-46ff-9551-727904b212ac"
                  }
                }
              ]
            },
            {
              "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
              "name": "API - GET /movies",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d4d1fcf-3b7e-4ca7-9187-ac9886f392ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('movies returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "4659531d-4da7-41ad-bfd8-b10625e12968"
                  }
                }
              ]
            },
            {
              "id": "af811459-8096-4490-9f2b-a97cf46e288d",
              "name": "API - POST /setup/test-users (create test users)",
              "request": {
                "url": {
                  "path": [
                    "setup",
                    "test-users"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dd02e41-0704-41f6-bea9-6cd8c62ef7fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "49b492ac-2764-480f-a302-186cf37ce0e8"
                  }
                }
              ]
            },
            {
              "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
              "name": "API - POST /auth/login (admin)",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                    ],
                    "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
                  }
                }
              ]
            },
            {
              "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
              "name": "API - POST /auth/login (empty payload) - NULL TEST",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "abc936d3-ef0b-4374-a9c5-14d503be10c0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"
                    ],
                    "_lastExecutionId": "141bcf06-598a-40c7-a610-6ff6b32fd4d2"
                  }
                }
              ]
            },
            {
              "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
              "name": "API - POST /auth/login (injection) - FUZZ/INJECTION",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0af1949-f4bd-4b56-a5db-dc1af5f95ed7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"
                    ],
                    "_lastExecutionId": "326c438b-7b5e-4420-9c16-19d51e627a9f"
                  }
                }
              ]
            },
            {
              "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
              "name": "API - POST /movies (null title) - NULL/BVA",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": null, \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
                  }
                }
              ]
            },
            {
              "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
              "name": "API - POST /movies (boundary durations) - BOUNDARY",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
                    ],
                    "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
                  }
                }
              ]
            },
            {
              "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
              "name": "API - POST /movies (very long title) - FUZZ",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c73ae8aa-32b0-419c-a5e4-584566fbfdcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"
                    ],
                    "_lastExecutionId": "d623c666-babc-4f5e-882d-480e7bddede6"
                  }
                }
              ]
            },
            {
              "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
              "name": "API - POST /movies (create movie) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
                  }
                }
              ]
            },
            {
              "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
              "name": "API - GET /movies/:id (invalid id) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "movies",
                    "invalid-id-123"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "547cba97-19e3-46f7-a1ac-52a986b856d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "eb0b3e6a-34db-49e8-8d7e-12bed3c961a8"
                  }
                }
              ]
            },
            {
              "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
              "name": "API - POST /theaters (create theater) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "theaters"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "378c6806-f62a-4e74-9187-1a91a505c236",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
                  }
                }
              ]
            },
            {
              "id": "44768877-6703-451c-9997-c0841a9dc152",
              "name": "API - POST /sessions (create session) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
                  }
                }
              ]
            },
            {
              "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
              "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
                  }
                }
              ]
            },
            {
              "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
              "name": "API - POST /reservations (missing seats) - NULL",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
                  }
                }
              ]
            },
            {
              "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
              "name": "API - POST /reservations (create reservation) [requires auth]",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
                  }
                }
              ]
            },
            {
              "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
              "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
                    ],
                    "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
                  }
                }
              ]
            },
            {
              "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
              "name": "API - GET /reservations (list)",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:5000/api/v1",
              "key": "base_api"
            },
            {
              "type": "string",
              "value": "",
              "key": "auth_token"
            },
            {
              "type": "string",
              "value": "",
              "key": "movie_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "theater_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "session_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "reservation_id"
            }
          ],
          "info": {
            "_postman_id": "e9f8d7c6-0000-4000-8000-000000000000",
            "name": "Cinema Challenge - Backend API Full Testing Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Coleção para validar endpoints básicos e executar fluxos e casos de teste técnicos (null, boundary, injection, negative, concurrency).",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "af2d827f-16f0-4958-ad98-276dc39fa060",
          "length": 18,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b7a7be4d-83d6-43ee-9a9c-5cf92b47fb2e",
          "scriptId": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
          "execution": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "null title returns 400 or 422",
          "message": "expected 401 to be one of [ 400, 422 ]",
          "stack": "AssertionError: expected 401 to be one of [ 400, 422 ]\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "5cd7920c6f618150ebaf760eeaa86ca1",
          "id": "c220b01c-7da7-479c-93fd-4650a59a034c",
          "timestamp": 1761433257545,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
          "name": "API - POST /movies (null title) - NULL/BVA",
          "request": {
            "url": {
              "path": [
                "movies"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"title\": null, \"duration\": 120 }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
                "type": "text/javascript",
                "exec": [
                  "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                ],
                "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "e9f8d7c6-0000-4000-8000-000000000000"
          },
          "item": [
            {
              "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
              "name": "API - GET /health",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2aa4075-057a-47f8-b2bd-b3b4b0d7ff77",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('health returns 200', function () { pm.response.to.have.status(200); });"
                    ],
                    "_lastExecutionId": "e711791b-580a-46ff-9551-727904b212ac"
                  }
                }
              ]
            },
            {
              "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
              "name": "API - GET /movies",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d4d1fcf-3b7e-4ca7-9187-ac9886f392ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('movies returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "4659531d-4da7-41ad-bfd8-b10625e12968"
                  }
                }
              ]
            },
            {
              "id": "af811459-8096-4490-9f2b-a97cf46e288d",
              "name": "API - POST /setup/test-users (create test users)",
              "request": {
                "url": {
                  "path": [
                    "setup",
                    "test-users"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dd02e41-0704-41f6-bea9-6cd8c62ef7fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "49b492ac-2764-480f-a302-186cf37ce0e8"
                  }
                }
              ]
            },
            {
              "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
              "name": "API - POST /auth/login (admin)",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                    ],
                    "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
                  }
                }
              ]
            },
            {
              "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
              "name": "API - POST /auth/login (empty payload) - NULL TEST",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "abc936d3-ef0b-4374-a9c5-14d503be10c0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"
                    ],
                    "_lastExecutionId": "141bcf06-598a-40c7-a610-6ff6b32fd4d2"
                  }
                }
              ]
            },
            {
              "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
              "name": "API - POST /auth/login (injection) - FUZZ/INJECTION",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0af1949-f4bd-4b56-a5db-dc1af5f95ed7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"
                    ],
                    "_lastExecutionId": "326c438b-7b5e-4420-9c16-19d51e627a9f"
                  }
                }
              ]
            },
            {
              "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
              "name": "API - POST /movies (null title) - NULL/BVA",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": null, \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
                  }
                }
              ]
            },
            {
              "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
              "name": "API - POST /movies (boundary durations) - BOUNDARY",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
                    ],
                    "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
                  }
                }
              ]
            },
            {
              "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
              "name": "API - POST /movies (very long title) - FUZZ",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c73ae8aa-32b0-419c-a5e4-584566fbfdcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"
                    ],
                    "_lastExecutionId": "d623c666-babc-4f5e-882d-480e7bddede6"
                  }
                }
              ]
            },
            {
              "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
              "name": "API - POST /movies (create movie) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
                  }
                }
              ]
            },
            {
              "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
              "name": "API - GET /movies/:id (invalid id) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "movies",
                    "invalid-id-123"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "547cba97-19e3-46f7-a1ac-52a986b856d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "eb0b3e6a-34db-49e8-8d7e-12bed3c961a8"
                  }
                }
              ]
            },
            {
              "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
              "name": "API - POST /theaters (create theater) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "theaters"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "378c6806-f62a-4e74-9187-1a91a505c236",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
                  }
                }
              ]
            },
            {
              "id": "44768877-6703-451c-9997-c0841a9dc152",
              "name": "API - POST /sessions (create session) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
                  }
                }
              ]
            },
            {
              "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
              "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
                  }
                }
              ]
            },
            {
              "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
              "name": "API - POST /reservations (missing seats) - NULL",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
                  }
                }
              ]
            },
            {
              "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
              "name": "API - POST /reservations (create reservation) [requires auth]",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
                  }
                }
              ]
            },
            {
              "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
              "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
                    ],
                    "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
                  }
                }
              ]
            },
            {
              "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
              "name": "API - GET /reservations (list)",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:5000/api/v1",
              "key": "base_api"
            },
            {
              "type": "string",
              "value": "",
              "key": "auth_token"
            },
            {
              "type": "string",
              "value": "",
              "key": "movie_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "theater_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "session_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "reservation_id"
            }
          ],
          "info": {
            "_postman_id": "e9f8d7c6-0000-4000-8000-000000000000",
            "name": "Cinema Challenge - Backend API Full Testing Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Coleção para validar endpoints básicos e executar fluxos e casos de teste técnicos (null, boundary, injection, negative, concurrency).",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "ba84c54d-7e8d-4a7e-83f4-d90ea5a59bf1",
          "length": 18,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ac8958c3-58a1-4e40-b3bc-fa5688727cdf",
          "scriptId": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
          "execution": "a553bac7-6903-49ec-86d4-ce384733babc"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "duration 0 returns 400 or 201 depending on validation",
          "message": "expected 401 to be one of [ 200, 201, 400, 422 ]",
          "stack": "AssertionError: expected 401 to be one of [ 200, 201, 400, 422 ]\n   at Object.eval sandbox-script.js:1:8)",
          "checksum": "e929a75ada9f95ccb44fb920cba303c4",
          "id": "1d4c53a2-96c1-4eb6-aff3-75febbee9e93",
          "timestamp": 1761433257625,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
          "name": "API - POST /movies (boundary durations) - BOUNDARY",
          "request": {
            "url": {
              "path": [
                "movies"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
                "type": "text/javascript",
                "exec": [
                  "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
                ],
                "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "e9f8d7c6-0000-4000-8000-000000000000"
          },
          "item": [
            {
              "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
              "name": "API - GET /health",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2aa4075-057a-47f8-b2bd-b3b4b0d7ff77",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('health returns 200', function () { pm.response.to.have.status(200); });"
                    ],
                    "_lastExecutionId": "e711791b-580a-46ff-9551-727904b212ac"
                  }
                }
              ]
            },
            {
              "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
              "name": "API - GET /movies",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d4d1fcf-3b7e-4ca7-9187-ac9886f392ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('movies returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "4659531d-4da7-41ad-bfd8-b10625e12968"
                  }
                }
              ]
            },
            {
              "id": "af811459-8096-4490-9f2b-a97cf46e288d",
              "name": "API - POST /setup/test-users (create test users)",
              "request": {
                "url": {
                  "path": [
                    "setup",
                    "test-users"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dd02e41-0704-41f6-bea9-6cd8c62ef7fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "49b492ac-2764-480f-a302-186cf37ce0e8"
                  }
                }
              ]
            },
            {
              "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
              "name": "API - POST /auth/login (admin)",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                    ],
                    "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
                  }
                }
              ]
            },
            {
              "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
              "name": "API - POST /auth/login (empty payload) - NULL TEST",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "abc936d3-ef0b-4374-a9c5-14d503be10c0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"
                    ],
                    "_lastExecutionId": "141bcf06-598a-40c7-a610-6ff6b32fd4d2"
                  }
                }
              ]
            },
            {
              "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
              "name": "API - POST /auth/login (injection) - FUZZ/INJECTION",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0af1949-f4bd-4b56-a5db-dc1af5f95ed7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"
                    ],
                    "_lastExecutionId": "326c438b-7b5e-4420-9c16-19d51e627a9f"
                  }
                }
              ]
            },
            {
              "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
              "name": "API - POST /movies (null title) - NULL/BVA",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": null, \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
                  }
                }
              ]
            },
            {
              "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
              "name": "API - POST /movies (boundary durations) - BOUNDARY",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
                    ],
                    "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
                  }
                }
              ]
            },
            {
              "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
              "name": "API - POST /movies (very long title) - FUZZ",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c73ae8aa-32b0-419c-a5e4-584566fbfdcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"
                    ],
                    "_lastExecutionId": "d623c666-babc-4f5e-882d-480e7bddede6"
                  }
                }
              ]
            },
            {
              "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
              "name": "API - POST /movies (create movie) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
                  }
                }
              ]
            },
            {
              "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
              "name": "API - GET /movies/:id (invalid id) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "movies",
                    "invalid-id-123"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "547cba97-19e3-46f7-a1ac-52a986b856d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "eb0b3e6a-34db-49e8-8d7e-12bed3c961a8"
                  }
                }
              ]
            },
            {
              "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
              "name": "API - POST /theaters (create theater) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "theaters"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "378c6806-f62a-4e74-9187-1a91a505c236",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
                  }
                }
              ]
            },
            {
              "id": "44768877-6703-451c-9997-c0841a9dc152",
              "name": "API - POST /sessions (create session) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
                  }
                }
              ]
            },
            {
              "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
              "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
                  }
                }
              ]
            },
            {
              "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
              "name": "API - POST /reservations (missing seats) - NULL",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
                  }
                }
              ]
            },
            {
              "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
              "name": "API - POST /reservations (create reservation) [requires auth]",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
                  }
                }
              ]
            },
            {
              "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
              "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
                    ],
                    "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
                  }
                }
              ]
            },
            {
              "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
              "name": "API - GET /reservations (list)",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:5000/api/v1",
              "key": "base_api"
            },
            {
              "type": "string",
              "value": "",
              "key": "auth_token"
            },
            {
              "type": "string",
              "value": "",
              "key": "movie_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "theater_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "session_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "reservation_id"
            }
          ],
          "info": {
            "_postman_id": "e9f8d7c6-0000-4000-8000-000000000000",
            "name": "Cinema Challenge - Backend API Full Testing Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Coleção para validar endpoints básicos e executar fluxos e casos de teste técnicos (null, boundary, injection, negative, concurrency).",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "729592e7-eccb-4995-92c0-e1260f6a509c",
          "length": 18,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c4d96912-e62a-4d05-8b16-90bfef1224e2",
          "scriptId": "5277c09b-2534-49cc-ab7b-53b42aaee233",
          "execution": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "create movie returns 201 or 200",
          "message": "expected 401 to be one of [ 200, 201 ]",
          "stack": "AssertionError: expected 401 to be one of [ 200, 201 ]\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "b6a9c768206d59a8e8e217df53eaf38f",
          "id": "f7d2aec8-1923-4e6b-aa2f-ce03782ed93b",
          "timestamp": 1761433257794,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
          "name": "API - POST /movies (create movie) [requires admin]",
          "request": {
            "url": {
              "path": [
                "movies"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                  "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                ],
                "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "e9f8d7c6-0000-4000-8000-000000000000"
          },
          "item": [
            {
              "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
              "name": "API - GET /health",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2aa4075-057a-47f8-b2bd-b3b4b0d7ff77",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('health returns 200', function () { pm.response.to.have.status(200); });"
                    ],
                    "_lastExecutionId": "e711791b-580a-46ff-9551-727904b212ac"
                  }
                }
              ]
            },
            {
              "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
              "name": "API - GET /movies",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d4d1fcf-3b7e-4ca7-9187-ac9886f392ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('movies returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "4659531d-4da7-41ad-bfd8-b10625e12968"
                  }
                }
              ]
            },
            {
              "id": "af811459-8096-4490-9f2b-a97cf46e288d",
              "name": "API - POST /setup/test-users (create test users)",
              "request": {
                "url": {
                  "path": [
                    "setup",
                    "test-users"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dd02e41-0704-41f6-bea9-6cd8c62ef7fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "49b492ac-2764-480f-a302-186cf37ce0e8"
                  }
                }
              ]
            },
            {
              "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
              "name": "API - POST /auth/login (admin)",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                    ],
                    "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
                  }
                }
              ]
            },
            {
              "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
              "name": "API - POST /auth/login (empty payload) - NULL TEST",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "abc936d3-ef0b-4374-a9c5-14d503be10c0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"
                    ],
                    "_lastExecutionId": "141bcf06-598a-40c7-a610-6ff6b32fd4d2"
                  }
                }
              ]
            },
            {
              "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
              "name": "API - POST /auth/login (injection) - FUZZ/INJECTION",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0af1949-f4bd-4b56-a5db-dc1af5f95ed7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"
                    ],
                    "_lastExecutionId": "326c438b-7b5e-4420-9c16-19d51e627a9f"
                  }
                }
              ]
            },
            {
              "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
              "name": "API - POST /movies (null title) - NULL/BVA",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": null, \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
                  }
                }
              ]
            },
            {
              "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
              "name": "API - POST /movies (boundary durations) - BOUNDARY",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
                    ],
                    "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
                  }
                }
              ]
            },
            {
              "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
              "name": "API - POST /movies (very long title) - FUZZ",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c73ae8aa-32b0-419c-a5e4-584566fbfdcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"
                    ],
                    "_lastExecutionId": "d623c666-babc-4f5e-882d-480e7bddede6"
                  }
                }
              ]
            },
            {
              "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
              "name": "API - POST /movies (create movie) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
                  }
                }
              ]
            },
            {
              "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
              "name": "API - GET /movies/:id (invalid id) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "movies",
                    "invalid-id-123"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "547cba97-19e3-46f7-a1ac-52a986b856d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "eb0b3e6a-34db-49e8-8d7e-12bed3c961a8"
                  }
                }
              ]
            },
            {
              "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
              "name": "API - POST /theaters (create theater) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "theaters"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "378c6806-f62a-4e74-9187-1a91a505c236",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
                  }
                }
              ]
            },
            {
              "id": "44768877-6703-451c-9997-c0841a9dc152",
              "name": "API - POST /sessions (create session) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
                  }
                }
              ]
            },
            {
              "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
              "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
                  }
                }
              ]
            },
            {
              "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
              "name": "API - POST /reservations (missing seats) - NULL",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
                  }
                }
              ]
            },
            {
              "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
              "name": "API - POST /reservations (create reservation) [requires auth]",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
                  }
                }
              ]
            },
            {
              "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
              "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
                    ],
                    "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
                  }
                }
              ]
            },
            {
              "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
              "name": "API - GET /reservations (list)",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:5000/api/v1",
              "key": "base_api"
            },
            {
              "type": "string",
              "value": "",
              "key": "auth_token"
            },
            {
              "type": "string",
              "value": "",
              "key": "movie_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "theater_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "session_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "reservation_id"
            }
          ],
          "info": {
            "_postman_id": "e9f8d7c6-0000-4000-8000-000000000000",
            "name": "Cinema Challenge - Backend API Full Testing Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Coleção para validar endpoints básicos e executar fluxos e casos de teste técnicos (null, boundary, injection, negative, concurrency).",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "f6899faf-6e35-4fff-93a4-b3c8aac8d6ab",
          "length": 18,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5a655388-c19f-4f4e-84c8-25e73b4c67b4",
          "scriptId": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
          "execution": "33898cd0-703e-4e26-8f60-005202672149"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "movie created captures id",
          "message": "expected undefined to be truthy",
          "stack": "AssertionError: expected undefined to be truthy\n   at Object.eval sandbox-script.js:2:10)",
          "checksum": "1479ab12a80ffd97f3bcd7817b550ac9",
          "id": "b7f31fbf-89d3-462b-9fd4-1ca7996b037f",
          "timestamp": 1761433257795,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
          "name": "API - POST /movies (create movie) [requires admin]",
          "request": {
            "url": {
              "path": [
                "movies"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                  "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                ],
                "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "e9f8d7c6-0000-4000-8000-000000000000"
          },
          "item": [
            {
              "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
              "name": "API - GET /health",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2aa4075-057a-47f8-b2bd-b3b4b0d7ff77",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('health returns 200', function () { pm.response.to.have.status(200); });"
                    ],
                    "_lastExecutionId": "e711791b-580a-46ff-9551-727904b212ac"
                  }
                }
              ]
            },
            {
              "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
              "name": "API - GET /movies",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d4d1fcf-3b7e-4ca7-9187-ac9886f392ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('movies returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "4659531d-4da7-41ad-bfd8-b10625e12968"
                  }
                }
              ]
            },
            {
              "id": "af811459-8096-4490-9f2b-a97cf46e288d",
              "name": "API - POST /setup/test-users (create test users)",
              "request": {
                "url": {
                  "path": [
                    "setup",
                    "test-users"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dd02e41-0704-41f6-bea9-6cd8c62ef7fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "49b492ac-2764-480f-a302-186cf37ce0e8"
                  }
                }
              ]
            },
            {
              "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
              "name": "API - POST /auth/login (admin)",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                    ],
                    "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
                  }
                }
              ]
            },
            {
              "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
              "name": "API - POST /auth/login (empty payload) - NULL TEST",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "abc936d3-ef0b-4374-a9c5-14d503be10c0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"
                    ],
                    "_lastExecutionId": "141bcf06-598a-40c7-a610-6ff6b32fd4d2"
                  }
                }
              ]
            },
            {
              "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
              "name": "API - POST /auth/login (injection) - FUZZ/INJECTION",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0af1949-f4bd-4b56-a5db-dc1af5f95ed7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"
                    ],
                    "_lastExecutionId": "326c438b-7b5e-4420-9c16-19d51e627a9f"
                  }
                }
              ]
            },
            {
              "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
              "name": "API - POST /movies (null title) - NULL/BVA",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": null, \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
                  }
                }
              ]
            },
            {
              "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
              "name": "API - POST /movies (boundary durations) - BOUNDARY",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
                    ],
                    "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
                  }
                }
              ]
            },
            {
              "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
              "name": "API - POST /movies (very long title) - FUZZ",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c73ae8aa-32b0-419c-a5e4-584566fbfdcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"
                    ],
                    "_lastExecutionId": "d623c666-babc-4f5e-882d-480e7bddede6"
                  }
                }
              ]
            },
            {
              "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
              "name": "API - POST /movies (create movie) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
                  }
                }
              ]
            },
            {
              "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
              "name": "API - GET /movies/:id (invalid id) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "movies",
                    "invalid-id-123"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "547cba97-19e3-46f7-a1ac-52a986b856d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "eb0b3e6a-34db-49e8-8d7e-12bed3c961a8"
                  }
                }
              ]
            },
            {
              "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
              "name": "API - POST /theaters (create theater) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "theaters"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "378c6806-f62a-4e74-9187-1a91a505c236",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
                  }
                }
              ]
            },
            {
              "id": "44768877-6703-451c-9997-c0841a9dc152",
              "name": "API - POST /sessions (create session) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
                  }
                }
              ]
            },
            {
              "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
              "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
                  }
                }
              ]
            },
            {
              "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
              "name": "API - POST /reservations (missing seats) - NULL",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
                  }
                }
              ]
            },
            {
              "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
              "name": "API - POST /reservations (create reservation) [requires auth]",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
                  }
                }
              ]
            },
            {
              "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
              "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
                    ],
                    "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
                  }
                }
              ]
            },
            {
              "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
              "name": "API - GET /reservations (list)",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:5000/api/v1",
              "key": "base_api"
            },
            {
              "type": "string",
              "value": "",
              "key": "auth_token"
            },
            {
              "type": "string",
              "value": "",
              "key": "movie_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "theater_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "session_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "reservation_id"
            }
          ],
          "info": {
            "_postman_id": "e9f8d7c6-0000-4000-8000-000000000000",
            "name": "Cinema Challenge - Backend API Full Testing Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Coleção para validar endpoints básicos e executar fluxos e casos de teste técnicos (null, boundary, injection, negative, concurrency).",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "f6899faf-6e35-4fff-93a4-b3c8aac8d6ab",
          "length": 18,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5a655388-c19f-4f4e-84c8-25e73b4c67b4",
          "scriptId": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
          "execution": "33898cd0-703e-4e26-8f60-005202672149"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "create theater returns 201 or 200",
          "message": "expected 401 to be one of [ 200, 201 ]",
          "stack": "AssertionError: expected 401 to be one of [ 200, 201 ]\n   at Object.eval sandbox-script.js:1:12)",
          "checksum": "d916efc861aaeae64a4f0773b4862ba3",
          "id": "2a6899be-4e9e-4c17-8483-d6e334335717",
          "timestamp": 1761433257981,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
          "name": "API - POST /theaters (create theater) [requires admin]",
          "request": {
            "url": {
              "path": [
                "theaters"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "378c6806-f62a-4e74-9187-1a91a505c236",
                "type": "text/javascript",
                "exec": [
                  "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                  "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
                ],
                "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "e9f8d7c6-0000-4000-8000-000000000000"
          },
          "item": [
            {
              "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
              "name": "API - GET /health",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2aa4075-057a-47f8-b2bd-b3b4b0d7ff77",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('health returns 200', function () { pm.response.to.have.status(200); });"
                    ],
                    "_lastExecutionId": "e711791b-580a-46ff-9551-727904b212ac"
                  }
                }
              ]
            },
            {
              "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
              "name": "API - GET /movies",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d4d1fcf-3b7e-4ca7-9187-ac9886f392ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('movies returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "4659531d-4da7-41ad-bfd8-b10625e12968"
                  }
                }
              ]
            },
            {
              "id": "af811459-8096-4490-9f2b-a97cf46e288d",
              "name": "API - POST /setup/test-users (create test users)",
              "request": {
                "url": {
                  "path": [
                    "setup",
                    "test-users"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dd02e41-0704-41f6-bea9-6cd8c62ef7fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "49b492ac-2764-480f-a302-186cf37ce0e8"
                  }
                }
              ]
            },
            {
              "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
              "name": "API - POST /auth/login (admin)",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                    ],
                    "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
                  }
                }
              ]
            },
            {
              "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
              "name": "API - POST /auth/login (empty payload) - NULL TEST",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "abc936d3-ef0b-4374-a9c5-14d503be10c0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"
                    ],
                    "_lastExecutionId": "141bcf06-598a-40c7-a610-6ff6b32fd4d2"
                  }
                }
              ]
            },
            {
              "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
              "name": "API - POST /auth/login (injection) - FUZZ/INJECTION",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0af1949-f4bd-4b56-a5db-dc1af5f95ed7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"
                    ],
                    "_lastExecutionId": "326c438b-7b5e-4420-9c16-19d51e627a9f"
                  }
                }
              ]
            },
            {
              "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
              "name": "API - POST /movies (null title) - NULL/BVA",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": null, \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
                  }
                }
              ]
            },
            {
              "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
              "name": "API - POST /movies (boundary durations) - BOUNDARY",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
                    ],
                    "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
                  }
                }
              ]
            },
            {
              "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
              "name": "API - POST /movies (very long title) - FUZZ",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c73ae8aa-32b0-419c-a5e4-584566fbfdcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"
                    ],
                    "_lastExecutionId": "d623c666-babc-4f5e-882d-480e7bddede6"
                  }
                }
              ]
            },
            {
              "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
              "name": "API - POST /movies (create movie) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
                  }
                }
              ]
            },
            {
              "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
              "name": "API - GET /movies/:id (invalid id) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "movies",
                    "invalid-id-123"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "547cba97-19e3-46f7-a1ac-52a986b856d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "eb0b3e6a-34db-49e8-8d7e-12bed3c961a8"
                  }
                }
              ]
            },
            {
              "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
              "name": "API - POST /theaters (create theater) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "theaters"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "378c6806-f62a-4e74-9187-1a91a505c236",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
                  }
                }
              ]
            },
            {
              "id": "44768877-6703-451c-9997-c0841a9dc152",
              "name": "API - POST /sessions (create session) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
                  }
                }
              ]
            },
            {
              "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
              "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
                  }
                }
              ]
            },
            {
              "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
              "name": "API - POST /reservations (missing seats) - NULL",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
                  }
                }
              ]
            },
            {
              "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
              "name": "API - POST /reservations (create reservation) [requires auth]",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
                  }
                }
              ]
            },
            {
              "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
              "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
                    ],
                    "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
                  }
                }
              ]
            },
            {
              "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
              "name": "API - GET /reservations (list)",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:5000/api/v1",
              "key": "base_api"
            },
            {
              "type": "string",
              "value": "",
              "key": "auth_token"
            },
            {
              "type": "string",
              "value": "",
              "key": "movie_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "theater_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "session_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "reservation_id"
            }
          ],
          "info": {
            "_postman_id": "e9f8d7c6-0000-4000-8000-000000000000",
            "name": "Cinema Challenge - Backend API Full Testing Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Coleção para validar endpoints básicos e executar fluxos e casos de teste técnicos (null, boundary, injection, negative, concurrency).",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "0c4f604f-2b20-4599-bb55-8bd39d131367",
          "length": 18,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7603a456-f327-4df2-92db-77c08a2a128b",
          "scriptId": "378c6806-f62a-4e74-9187-1a91a505c236",
          "execution": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "create session returns 201 or 200",
          "message": "expected 401 to be one of [ 200, 201 ]",
          "stack": "AssertionError: expected 401 to be one of [ 200, 201 ]\n   at Object.eval sandbox-script.js:1:13)",
          "checksum": "07f147c66c86719d7b471dce1d9dc833",
          "id": "dd46582b-86af-4263-a23f-edaea74d9057",
          "timestamp": 1761433258073,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "44768877-6703-451c-9997-c0841a9dc152",
          "name": "API - POST /sessions (create session) [requires admin]",
          "request": {
            "url": {
              "path": [
                "sessions"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
                "type": "text/javascript",
                "exec": [
                  "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                  "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
                ],
                "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "e9f8d7c6-0000-4000-8000-000000000000"
          },
          "item": [
            {
              "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
              "name": "API - GET /health",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2aa4075-057a-47f8-b2bd-b3b4b0d7ff77",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('health returns 200', function () { pm.response.to.have.status(200); });"
                    ],
                    "_lastExecutionId": "e711791b-580a-46ff-9551-727904b212ac"
                  }
                }
              ]
            },
            {
              "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
              "name": "API - GET /movies",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d4d1fcf-3b7e-4ca7-9187-ac9886f392ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('movies returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "4659531d-4da7-41ad-bfd8-b10625e12968"
                  }
                }
              ]
            },
            {
              "id": "af811459-8096-4490-9f2b-a97cf46e288d",
              "name": "API - POST /setup/test-users (create test users)",
              "request": {
                "url": {
                  "path": [
                    "setup",
                    "test-users"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dd02e41-0704-41f6-bea9-6cd8c62ef7fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "49b492ac-2764-480f-a302-186cf37ce0e8"
                  }
                }
              ]
            },
            {
              "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
              "name": "API - POST /auth/login (admin)",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                    ],
                    "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
                  }
                }
              ]
            },
            {
              "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
              "name": "API - POST /auth/login (empty payload) - NULL TEST",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "abc936d3-ef0b-4374-a9c5-14d503be10c0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"
                    ],
                    "_lastExecutionId": "141bcf06-598a-40c7-a610-6ff6b32fd4d2"
                  }
                }
              ]
            },
            {
              "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
              "name": "API - POST /auth/login (injection) - FUZZ/INJECTION",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0af1949-f4bd-4b56-a5db-dc1af5f95ed7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"
                    ],
                    "_lastExecutionId": "326c438b-7b5e-4420-9c16-19d51e627a9f"
                  }
                }
              ]
            },
            {
              "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
              "name": "API - POST /movies (null title) - NULL/BVA",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": null, \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
                  }
                }
              ]
            },
            {
              "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
              "name": "API - POST /movies (boundary durations) - BOUNDARY",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
                    ],
                    "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
                  }
                }
              ]
            },
            {
              "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
              "name": "API - POST /movies (very long title) - FUZZ",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c73ae8aa-32b0-419c-a5e4-584566fbfdcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"
                    ],
                    "_lastExecutionId": "d623c666-babc-4f5e-882d-480e7bddede6"
                  }
                }
              ]
            },
            {
              "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
              "name": "API - POST /movies (create movie) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
                  }
                }
              ]
            },
            {
              "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
              "name": "API - GET /movies/:id (invalid id) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "movies",
                    "invalid-id-123"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "547cba97-19e3-46f7-a1ac-52a986b856d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "eb0b3e6a-34db-49e8-8d7e-12bed3c961a8"
                  }
                }
              ]
            },
            {
              "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
              "name": "API - POST /theaters (create theater) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "theaters"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "378c6806-f62a-4e74-9187-1a91a505c236",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
                  }
                }
              ]
            },
            {
              "id": "44768877-6703-451c-9997-c0841a9dc152",
              "name": "API - POST /sessions (create session) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
                  }
                }
              ]
            },
            {
              "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
              "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
                  }
                }
              ]
            },
            {
              "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
              "name": "API - POST /reservations (missing seats) - NULL",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
                  }
                }
              ]
            },
            {
              "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
              "name": "API - POST /reservations (create reservation) [requires auth]",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
                  }
                }
              ]
            },
            {
              "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
              "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
                    ],
                    "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
                  }
                }
              ]
            },
            {
              "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
              "name": "API - GET /reservations (list)",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:5000/api/v1",
              "key": "base_api"
            },
            {
              "type": "string",
              "value": "",
              "key": "auth_token"
            },
            {
              "type": "string",
              "value": "",
              "key": "movie_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "theater_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "session_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "reservation_id"
            }
          ],
          "info": {
            "_postman_id": "e9f8d7c6-0000-4000-8000-000000000000",
            "name": "Cinema Challenge - Backend API Full Testing Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Coleção para validar endpoints básicos e executar fluxos e casos de teste técnicos (null, boundary, injection, negative, concurrency).",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "b86a3862-68f8-4614-a346-b6b9c51ac95b",
          "length": 18,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4c1e321e-bfc3-43fd-a270-9377fc223c5e",
          "scriptId": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
          "execution": "fc451f55-e277-4869-9940-354bd790fff5"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "invalid movie/theater returns 400/404",
          "message": "expected 401 to be one of [ 400, 404 ]",
          "stack": "AssertionError: expected 401 to be one of [ 400, 404 ]\n   at Object.eval sandbox-script.js:1:14)",
          "checksum": "e29615a1d971303912486b5dddde3dd9",
          "id": "4110953b-99ab-4830-bb44-83fc43e0d9ea",
          "timestamp": 1761433258165,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 14,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
          "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
          "request": {
            "url": {
              "path": [
                "sessions"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
                "type": "text/javascript",
                "exec": [
                  "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                ],
                "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "e9f8d7c6-0000-4000-8000-000000000000"
          },
          "item": [
            {
              "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
              "name": "API - GET /health",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2aa4075-057a-47f8-b2bd-b3b4b0d7ff77",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('health returns 200', function () { pm.response.to.have.status(200); });"
                    ],
                    "_lastExecutionId": "e711791b-580a-46ff-9551-727904b212ac"
                  }
                }
              ]
            },
            {
              "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
              "name": "API - GET /movies",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d4d1fcf-3b7e-4ca7-9187-ac9886f392ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('movies returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "4659531d-4da7-41ad-bfd8-b10625e12968"
                  }
                }
              ]
            },
            {
              "id": "af811459-8096-4490-9f2b-a97cf46e288d",
              "name": "API - POST /setup/test-users (create test users)",
              "request": {
                "url": {
                  "path": [
                    "setup",
                    "test-users"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dd02e41-0704-41f6-bea9-6cd8c62ef7fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "49b492ac-2764-480f-a302-186cf37ce0e8"
                  }
                }
              ]
            },
            {
              "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
              "name": "API - POST /auth/login (admin)",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                    ],
                    "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
                  }
                }
              ]
            },
            {
              "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
              "name": "API - POST /auth/login (empty payload) - NULL TEST",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "abc936d3-ef0b-4374-a9c5-14d503be10c0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"
                    ],
                    "_lastExecutionId": "141bcf06-598a-40c7-a610-6ff6b32fd4d2"
                  }
                }
              ]
            },
            {
              "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
              "name": "API - POST /auth/login (injection) - FUZZ/INJECTION",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0af1949-f4bd-4b56-a5db-dc1af5f95ed7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"
                    ],
                    "_lastExecutionId": "326c438b-7b5e-4420-9c16-19d51e627a9f"
                  }
                }
              ]
            },
            {
              "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
              "name": "API - POST /movies (null title) - NULL/BVA",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": null, \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
                  }
                }
              ]
            },
            {
              "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
              "name": "API - POST /movies (boundary durations) - BOUNDARY",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
                    ],
                    "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
                  }
                }
              ]
            },
            {
              "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
              "name": "API - POST /movies (very long title) - FUZZ",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c73ae8aa-32b0-419c-a5e4-584566fbfdcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"
                    ],
                    "_lastExecutionId": "d623c666-babc-4f5e-882d-480e7bddede6"
                  }
                }
              ]
            },
            {
              "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
              "name": "API - POST /movies (create movie) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
                  }
                }
              ]
            },
            {
              "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
              "name": "API - GET /movies/:id (invalid id) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "movies",
                    "invalid-id-123"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "547cba97-19e3-46f7-a1ac-52a986b856d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "eb0b3e6a-34db-49e8-8d7e-12bed3c961a8"
                  }
                }
              ]
            },
            {
              "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
              "name": "API - POST /theaters (create theater) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "theaters"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "378c6806-f62a-4e74-9187-1a91a505c236",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
                  }
                }
              ]
            },
            {
              "id": "44768877-6703-451c-9997-c0841a9dc152",
              "name": "API - POST /sessions (create session) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
                  }
                }
              ]
            },
            {
              "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
              "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
                  }
                }
              ]
            },
            {
              "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
              "name": "API - POST /reservations (missing seats) - NULL",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
                  }
                }
              ]
            },
            {
              "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
              "name": "API - POST /reservations (create reservation) [requires auth]",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
                  }
                }
              ]
            },
            {
              "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
              "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
                    ],
                    "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
                  }
                }
              ]
            },
            {
              "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
              "name": "API - GET /reservations (list)",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:5000/api/v1",
              "key": "base_api"
            },
            {
              "type": "string",
              "value": "",
              "key": "auth_token"
            },
            {
              "type": "string",
              "value": "",
              "key": "movie_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "theater_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "session_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "reservation_id"
            }
          ],
          "info": {
            "_postman_id": "e9f8d7c6-0000-4000-8000-000000000000",
            "name": "Cinema Challenge - Backend API Full Testing Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Coleção para validar endpoints básicos e executar fluxos e casos de teste técnicos (null, boundary, injection, negative, concurrency).",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "459c63aa-81f9-4e83-bbd0-195b72082893",
          "length": 18,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f1126002-46ea-4855-aa6d-fa72857c742f",
          "scriptId": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
          "execution": "34e45027-81eb-4ddd-a1df-f47376334f6c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "missing seats returns 400/422",
          "message": "expected 401 to be one of [ 400, 422 ]",
          "stack": "AssertionError: expected 401 to be one of [ 400, 422 ]\n   at Object.eval sandbox-script.js:1:15)",
          "checksum": "21828fdbdda7594deedf04fc82947c5b",
          "id": "284d8345-41be-4949-ac00-490c486e4c6e",
          "timestamp": 1761433258258,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 15,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
          "name": "API - POST /reservations (missing seats) - NULL",
          "request": {
            "url": {
              "path": [
                "reservations"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"sessionId\": \"{{session_id}}\" }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
                "type": "text/javascript",
                "exec": [
                  "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                ],
                "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "e9f8d7c6-0000-4000-8000-000000000000"
          },
          "item": [
            {
              "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
              "name": "API - GET /health",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2aa4075-057a-47f8-b2bd-b3b4b0d7ff77",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('health returns 200', function () { pm.response.to.have.status(200); });"
                    ],
                    "_lastExecutionId": "e711791b-580a-46ff-9551-727904b212ac"
                  }
                }
              ]
            },
            {
              "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
              "name": "API - GET /movies",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d4d1fcf-3b7e-4ca7-9187-ac9886f392ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('movies returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "4659531d-4da7-41ad-bfd8-b10625e12968"
                  }
                }
              ]
            },
            {
              "id": "af811459-8096-4490-9f2b-a97cf46e288d",
              "name": "API - POST /setup/test-users (create test users)",
              "request": {
                "url": {
                  "path": [
                    "setup",
                    "test-users"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dd02e41-0704-41f6-bea9-6cd8c62ef7fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "49b492ac-2764-480f-a302-186cf37ce0e8"
                  }
                }
              ]
            },
            {
              "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
              "name": "API - POST /auth/login (admin)",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                    ],
                    "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
                  }
                }
              ]
            },
            {
              "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
              "name": "API - POST /auth/login (empty payload) - NULL TEST",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "abc936d3-ef0b-4374-a9c5-14d503be10c0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"
                    ],
                    "_lastExecutionId": "141bcf06-598a-40c7-a610-6ff6b32fd4d2"
                  }
                }
              ]
            },
            {
              "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
              "name": "API - POST /auth/login (injection) - FUZZ/INJECTION",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0af1949-f4bd-4b56-a5db-dc1af5f95ed7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"
                    ],
                    "_lastExecutionId": "326c438b-7b5e-4420-9c16-19d51e627a9f"
                  }
                }
              ]
            },
            {
              "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
              "name": "API - POST /movies (null title) - NULL/BVA",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": null, \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
                  }
                }
              ]
            },
            {
              "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
              "name": "API - POST /movies (boundary durations) - BOUNDARY",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
                    ],
                    "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
                  }
                }
              ]
            },
            {
              "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
              "name": "API - POST /movies (very long title) - FUZZ",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c73ae8aa-32b0-419c-a5e4-584566fbfdcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"
                    ],
                    "_lastExecutionId": "d623c666-babc-4f5e-882d-480e7bddede6"
                  }
                }
              ]
            },
            {
              "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
              "name": "API - POST /movies (create movie) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
                  }
                }
              ]
            },
            {
              "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
              "name": "API - GET /movies/:id (invalid id) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "movies",
                    "invalid-id-123"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "547cba97-19e3-46f7-a1ac-52a986b856d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "eb0b3e6a-34db-49e8-8d7e-12bed3c961a8"
                  }
                }
              ]
            },
            {
              "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
              "name": "API - POST /theaters (create theater) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "theaters"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "378c6806-f62a-4e74-9187-1a91a505c236",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
                  }
                }
              ]
            },
            {
              "id": "44768877-6703-451c-9997-c0841a9dc152",
              "name": "API - POST /sessions (create session) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
                  }
                }
              ]
            },
            {
              "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
              "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
                  }
                }
              ]
            },
            {
              "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
              "name": "API - POST /reservations (missing seats) - NULL",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
                  }
                }
              ]
            },
            {
              "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
              "name": "API - POST /reservations (create reservation) [requires auth]",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
                  }
                }
              ]
            },
            {
              "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
              "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
                    ],
                    "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
                  }
                }
              ]
            },
            {
              "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
              "name": "API - GET /reservations (list)",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:5000/api/v1",
              "key": "base_api"
            },
            {
              "type": "string",
              "value": "",
              "key": "auth_token"
            },
            {
              "type": "string",
              "value": "",
              "key": "movie_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "theater_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "session_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "reservation_id"
            }
          ],
          "info": {
            "_postman_id": "e9f8d7c6-0000-4000-8000-000000000000",
            "name": "Cinema Challenge - Backend API Full Testing Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Coleção para validar endpoints básicos e executar fluxos e casos de teste técnicos (null, boundary, injection, negative, concurrency).",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "a67fe1c6-be9d-46d1-89f5-2b06cd1257ea",
          "length": 18,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f2a18e41-141c-4da0-b4c8-72e63e36aec2",
          "scriptId": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
          "execution": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "create reservation returns 201 or 200",
          "message": "expected 401 to be one of [ 200, 201 ]",
          "stack": "AssertionError: expected 401 to be one of [ 200, 201 ]\n   at Object.eval sandbox-script.js:1:16)",
          "checksum": "8e19e86760b9e5dc7ef398d297896168",
          "id": "69056184-63b5-47a1-8b76-e5eeb0740e7d",
          "timestamp": 1761433258351,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
          "name": "API - POST /reservations (create reservation) [requires auth]",
          "request": {
            "url": {
              "path": [
                "reservations"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
                "type": "text/javascript",
                "exec": [
                  "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                  "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
                ],
                "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "e9f8d7c6-0000-4000-8000-000000000000"
          },
          "item": [
            {
              "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
              "name": "API - GET /health",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2aa4075-057a-47f8-b2bd-b3b4b0d7ff77",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('health returns 200', function () { pm.response.to.have.status(200); });"
                    ],
                    "_lastExecutionId": "e711791b-580a-46ff-9551-727904b212ac"
                  }
                }
              ]
            },
            {
              "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
              "name": "API - GET /movies",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d4d1fcf-3b7e-4ca7-9187-ac9886f392ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('movies returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "4659531d-4da7-41ad-bfd8-b10625e12968"
                  }
                }
              ]
            },
            {
              "id": "af811459-8096-4490-9f2b-a97cf46e288d",
              "name": "API - POST /setup/test-users (create test users)",
              "request": {
                "url": {
                  "path": [
                    "setup",
                    "test-users"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dd02e41-0704-41f6-bea9-6cd8c62ef7fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "49b492ac-2764-480f-a302-186cf37ce0e8"
                  }
                }
              ]
            },
            {
              "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
              "name": "API - POST /auth/login (admin)",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                    ],
                    "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
                  }
                }
              ]
            },
            {
              "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
              "name": "API - POST /auth/login (empty payload) - NULL TEST",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "abc936d3-ef0b-4374-a9c5-14d503be10c0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"
                    ],
                    "_lastExecutionId": "141bcf06-598a-40c7-a610-6ff6b32fd4d2"
                  }
                }
              ]
            },
            {
              "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
              "name": "API - POST /auth/login (injection) - FUZZ/INJECTION",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0af1949-f4bd-4b56-a5db-dc1af5f95ed7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"
                    ],
                    "_lastExecutionId": "326c438b-7b5e-4420-9c16-19d51e627a9f"
                  }
                }
              ]
            },
            {
              "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
              "name": "API - POST /movies (null title) - NULL/BVA",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": null, \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
                  }
                }
              ]
            },
            {
              "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
              "name": "API - POST /movies (boundary durations) - BOUNDARY",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
                    ],
                    "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
                  }
                }
              ]
            },
            {
              "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
              "name": "API - POST /movies (very long title) - FUZZ",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c73ae8aa-32b0-419c-a5e4-584566fbfdcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"
                    ],
                    "_lastExecutionId": "d623c666-babc-4f5e-882d-480e7bddede6"
                  }
                }
              ]
            },
            {
              "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
              "name": "API - POST /movies (create movie) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
                  }
                }
              ]
            },
            {
              "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
              "name": "API - GET /movies/:id (invalid id) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "movies",
                    "invalid-id-123"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "547cba97-19e3-46f7-a1ac-52a986b856d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "eb0b3e6a-34db-49e8-8d7e-12bed3c961a8"
                  }
                }
              ]
            },
            {
              "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
              "name": "API - POST /theaters (create theater) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "theaters"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "378c6806-f62a-4e74-9187-1a91a505c236",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
                  }
                }
              ]
            },
            {
              "id": "44768877-6703-451c-9997-c0841a9dc152",
              "name": "API - POST /sessions (create session) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
                  }
                }
              ]
            },
            {
              "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
              "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
                  }
                }
              ]
            },
            {
              "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
              "name": "API - POST /reservations (missing seats) - NULL",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
                  }
                }
              ]
            },
            {
              "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
              "name": "API - POST /reservations (create reservation) [requires auth]",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
                  }
                }
              ]
            },
            {
              "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
              "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
                    ],
                    "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
                  }
                }
              ]
            },
            {
              "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
              "name": "API - GET /reservations (list)",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:5000/api/v1",
              "key": "base_api"
            },
            {
              "type": "string",
              "value": "",
              "key": "auth_token"
            },
            {
              "type": "string",
              "value": "",
              "key": "movie_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "theater_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "session_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "reservation_id"
            }
          ],
          "info": {
            "_postman_id": "e9f8d7c6-0000-4000-8000-000000000000",
            "name": "Cinema Challenge - Backend API Full Testing Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Coleção para validar endpoints básicos e executar fluxos e casos de teste técnicos (null, boundary, injection, negative, concurrency).",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "a131f15f-9d55-4f45-9478-7a67f424ad66",
          "length": 18,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3bed4187-b75f-4761-a1bf-d2b857820400",
          "scriptId": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
          "execution": "90b79edf-2de6-4e50-9063-1ad63a308d35"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "duplicate reservation should not be allowed (expect 4xx)",
          "message": "expected 401 to be one of [ 400, 409, 422 ]",
          "stack": "AssertionError: expected 401 to be one of [ 400, 409, 422 ]\n   at Object.eval sandbox-script.js:1:17)",
          "checksum": "a69fa9b73102951a801a9758327156ed",
          "id": "17e66727-8b4c-4daf-a55a-9afe58b6cf05",
          "timestamp": 1761433258444,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 17,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
          "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
          "request": {
            "url": {
              "path": [
                "reservations"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
                "type": "text/javascript",
                "exec": [
                  "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
                ],
                "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "e9f8d7c6-0000-4000-8000-000000000000"
          },
          "item": [
            {
              "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
              "name": "API - GET /health",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2aa4075-057a-47f8-b2bd-b3b4b0d7ff77",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('health returns 200', function () { pm.response.to.have.status(200); });"
                    ],
                    "_lastExecutionId": "e711791b-580a-46ff-9551-727904b212ac"
                  }
                }
              ]
            },
            {
              "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
              "name": "API - GET /movies",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d4d1fcf-3b7e-4ca7-9187-ac9886f392ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('movies returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "4659531d-4da7-41ad-bfd8-b10625e12968"
                  }
                }
              ]
            },
            {
              "id": "af811459-8096-4490-9f2b-a97cf46e288d",
              "name": "API - POST /setup/test-users (create test users)",
              "request": {
                "url": {
                  "path": [
                    "setup",
                    "test-users"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dd02e41-0704-41f6-bea9-6cd8c62ef7fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "49b492ac-2764-480f-a302-186cf37ce0e8"
                  }
                }
              ]
            },
            {
              "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
              "name": "API - POST /auth/login (admin)",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                    ],
                    "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
                  }
                }
              ]
            },
            {
              "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
              "name": "API - POST /auth/login (empty payload) - NULL TEST",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "abc936d3-ef0b-4374-a9c5-14d503be10c0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"
                    ],
                    "_lastExecutionId": "141bcf06-598a-40c7-a610-6ff6b32fd4d2"
                  }
                }
              ]
            },
            {
              "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
              "name": "API - POST /auth/login (injection) - FUZZ/INJECTION",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0af1949-f4bd-4b56-a5db-dc1af5f95ed7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"
                    ],
                    "_lastExecutionId": "326c438b-7b5e-4420-9c16-19d51e627a9f"
                  }
                }
              ]
            },
            {
              "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
              "name": "API - POST /movies (null title) - NULL/BVA",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": null, \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
                  }
                }
              ]
            },
            {
              "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
              "name": "API - POST /movies (boundary durations) - BOUNDARY",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
                    ],
                    "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
                  }
                }
              ]
            },
            {
              "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
              "name": "API - POST /movies (very long title) - FUZZ",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c73ae8aa-32b0-419c-a5e4-584566fbfdcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"
                    ],
                    "_lastExecutionId": "d623c666-babc-4f5e-882d-480e7bddede6"
                  }
                }
              ]
            },
            {
              "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
              "name": "API - POST /movies (create movie) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
                  }
                }
              ]
            },
            {
              "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
              "name": "API - GET /movies/:id (invalid id) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "movies",
                    "invalid-id-123"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "547cba97-19e3-46f7-a1ac-52a986b856d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "eb0b3e6a-34db-49e8-8d7e-12bed3c961a8"
                  }
                }
              ]
            },
            {
              "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
              "name": "API - POST /theaters (create theater) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "theaters"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "378c6806-f62a-4e74-9187-1a91a505c236",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
                  }
                }
              ]
            },
            {
              "id": "44768877-6703-451c-9997-c0841a9dc152",
              "name": "API - POST /sessions (create session) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
                  }
                }
              ]
            },
            {
              "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
              "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
                  }
                }
              ]
            },
            {
              "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
              "name": "API - POST /reservations (missing seats) - NULL",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
                  }
                }
              ]
            },
            {
              "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
              "name": "API - POST /reservations (create reservation) [requires auth]",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
                  }
                }
              ]
            },
            {
              "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
              "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
                    ],
                    "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
                  }
                }
              ]
            },
            {
              "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
              "name": "API - GET /reservations (list)",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:5000/api/v1",
              "key": "base_api"
            },
            {
              "type": "string",
              "value": "",
              "key": "auth_token"
            },
            {
              "type": "string",
              "value": "",
              "key": "movie_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "theater_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "session_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "reservation_id"
            }
          ],
          "info": {
            "_postman_id": "e9f8d7c6-0000-4000-8000-000000000000",
            "name": "Cinema Challenge - Backend API Full Testing Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Coleção para validar endpoints básicos e executar fluxos e casos de teste técnicos (null, boundary, injection, negative, concurrency).",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "63409093-f09e-4fb5-9cb2-81cf758ad826",
          "length": 18,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1f79bc15-9d51-457a-b885-2199f675de78",
          "scriptId": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
          "execution": "336c4c69-23ee-40fb-b108-7a10c077f59f"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "list reservations returns 200",
          "message": "expected response to have status code 200 but got 401",
          "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:18)",
          "checksum": "0be2e2db15c096883afcc147a4a435e4",
          "id": "969dbe8b-92d3-4d31-95d5-0a8029fe0920",
          "timestamp": 1761433258538,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 18,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
          "name": "API - GET /reservations (list)",
          "request": {
            "url": {
              "path": [
                "reservations"
              ],
              "host": [
                "{{base_api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
                "type": "text/javascript",
                "exec": [
                  "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                  "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                ],
                "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "e9f8d7c6-0000-4000-8000-000000000000"
          },
          "item": [
            {
              "id": "791dc5a1-bb24-4a71-9af9-7feb8ac5b159",
              "name": "API - GET /health",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2aa4075-057a-47f8-b2bd-b3b4b0d7ff77",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('health returns 200', function () { pm.response.to.have.status(200); });"
                    ],
                    "_lastExecutionId": "e711791b-580a-46ff-9551-727904b212ac"
                  }
                }
              ]
            },
            {
              "id": "cabcfde6-cce1-4c65-93e0-7819c85ac93e",
              "name": "API - GET /movies",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d4d1fcf-3b7e-4ca7-9187-ac9886f392ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('movies returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('movies returns array or object', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "4659531d-4da7-41ad-bfd8-b10625e12968"
                  }
                }
              ]
            },
            {
              "id": "af811459-8096-4490-9f2b-a97cf46e288d",
              "name": "API - POST /setup/test-users (create test users)",
              "request": {
                "url": {
                  "path": [
                    "setup",
                    "test-users"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"users\": [ { \"email\": \"admin@admin.com\", \"password\": \"admin\", \"role\": \"admin\" } ] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dd02e41-0704-41f6-bea9-6cd8c62ef7fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('setup test-users returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('setup returns JSON', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "49b492ac-2764-480f-a302-186cf37ce0e8"
                  }
                }
              ]
            },
            {
              "id": "c5850abb-b5e4-43e8-bc88-aee927759cfa",
              "name": "API - POST /auth/login (admin)",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"admin@admin.com\", \"password\": \"admin\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d2563f12-c8fd-4540-96be-54ca82aed3e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('login returns 200/201', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); pm.test('login returns token', function(){ pm.expect(json).to.have.property('token'); pm.collectionVariables.set('auth_token', json.token); pm.environment.set('auth_token', json.token); }); } catch(e){}"
                    ],
                    "_lastExecutionId": "2627c7b6-5078-4e33-8e5f-98ce5871f797"
                  }
                }
              ]
            },
            {
              "id": "c8dd2ea7-c100-4cac-8706-d58ca5851fa7",
              "name": "API - POST /auth/login (empty payload) - NULL TEST",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "abc936d3-ef0b-4374-a9c5-14d503be10c0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('empty login returns 400/401', function () { pm.expect(pm.response.code).to.be.oneOf([400,401]); });"
                    ],
                    "_lastExecutionId": "141bcf06-598a-40c7-a610-6ff6b32fd4d2"
                  }
                }
              ]
            },
            {
              "id": "58850cc4-96b2-4e54-be6c-f1abf5e716a3",
              "name": "API - POST /auth/login (injection) - FUZZ/INJECTION",
              "request": {
                "url": {
                  "path": [
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"email\": \"' OR '1'='1\", \"password\": \"' OR '1'='1\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0af1949-f4bd-4b56-a5db-dc1af5f95ed7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('injection attempt should not return 200', function () { pm.expect(pm.response.code).to.not.equal(200); });"
                    ],
                    "_lastExecutionId": "326c438b-7b5e-4420-9c16-19d51e627a9f"
                  }
                }
              ]
            },
            {
              "id": "1dff2a0e-c76d-4e07-8b26-a20fed7bb4fd",
              "name": "API - POST /movies (null title) - NULL/BVA",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": null, \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0aa03de1-4289-4a7d-9599-f96dd531cb24",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('null title returns 400 or 422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "a553bac7-6903-49ec-86d4-ce384733babc"
                  }
                }
              ]
            },
            {
              "id": "42b35e04-efc2-404f-920c-6ec610f93ec2",
              "name": "API - POST /movies (boundary durations) - BOUNDARY",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Boundary Movie 0\", \"duration\": 0 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5277c09b-2534-49cc-ab7b-53b42aaee233",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duration 0 returns 400 or 201 depending on validation', function () { pm.expect(pm.response.code).to.be.oneOf([200,201,400,422]); });"
                    ],
                    "_lastExecutionId": "46ab763d-07d9-4aa1-bb43-3e9dc880a7dd"
                  }
                }
              ]
            },
            {
              "id": "b5a660f2-3c98-4a2c-9906-fd9238259e4a",
              "name": "API - POST /movies (very long title) - FUZZ",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"duration\": 120 }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c73ae8aa-32b0-419c-a5e4-584566fbfdcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('very long title should not crash server (check not 500)', function () { pm.expect(pm.response.code).to.not.equal(500); });"
                    ],
                    "_lastExecutionId": "d623c666-babc-4f5e-882d-480e7bddede6"
                  }
                }
              ]
            },
            {
              "id": "4977ef4b-1b42-4334-9987-8aa50da628cb",
              "name": "API - POST /movies (create movie) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "movies"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Test Movie\", \"duration\": 120, \"description\": \"Smoke test movie\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a752f1a0-e321-476e-bef2-27cf69d9f54e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create movie returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.data && json.data._1d); if (id) { pm.collectionVariables.set('movie_id', id); } pm.test('movie created captures id', function(){ pm.expect(id).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "33898cd0-703e-4e26-8f60-005202672149"
                  }
                }
              ]
            },
            {
              "id": "78e8c864-df1b-4ebe-8445-b2c985218ec6",
              "name": "API - GET /movies/:id (invalid id) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "movies",
                    "invalid-id-123"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "547cba97-19e3-46f7-a1ac-52a986b856d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid id returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "eb0b3e6a-34db-49e8-8d7e-12bed3c961a8"
                  }
                }
              ]
            },
            {
              "id": "f3b9d412-8611-4bfd-8b97-60eaf3faf7dd",
              "name": "API - POST /theaters (create theater) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "theaters"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"name\": \"Test Theater\", \"seats\": [\"A1\",\"A2\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "378c6806-f62a-4e74-9187-1a91a505c236",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create theater returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('theater_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "d98adcfb-be7e-4b6c-b020-5d05adf2612e"
                  }
                }
              ]
            },
            {
              "id": "44768877-6703-451c-9997-c0841a9dc152",
              "name": "API - POST /sessions (create session) [requires admin]",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"{{movie_id}}\", \"theaterId\": \"{{theater_id}}\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c013f429-c6b1-45ef-9e09-e4d0d81c41ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create session returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id || (json.session && json.session._id); if (id) pm.collectionVariables.set('session_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "fc451f55-e277-4869-9940-354bd790fff5"
                  }
                }
              ]
            },
            {
              "id": "3174a199-b0c8-45c5-a50c-ae73bc9ba813",
              "name": "API - POST /sessions (invalid movie/theater) - NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "sessions"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"movieId\": \"invalid-movie-id\", \"theaterId\": \"invalid-theater-id\", \"start\": \"2025-12-01T19:00:00.000Z\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "adc58ac0-6f6c-45d6-bf5d-6f1df11bd1ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('invalid movie/theater returns 400/404', function () { pm.expect(pm.response.code).to.be.oneOf([400,404]); });"
                    ],
                    "_lastExecutionId": "34e45027-81eb-4ddd-a1df-f47376334f6c"
                  }
                }
              ]
            },
            {
              "id": "e09ac8b6-76e1-4391-8041-c659a622882a",
              "name": "API - POST /reservations (missing seats) - NULL",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\" }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "116d9f0f-9ead-462e-aa00-b8d93d514d50",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('missing seats returns 400/422', function () { pm.expect(pm.response.code).to.be.oneOf([400,422]); });"
                    ],
                    "_lastExecutionId": "8472963c-a7f5-4176-b6f8-8a8534bbf90b"
                  }
                }
              ]
            },
            {
              "id": "0ad034a3-6dec-4819-9759-73975bc41bf6",
              "name": "API - POST /reservations (create reservation) [requires auth]",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "634da98f-d85a-4e44-b07c-3ff6b92fc7c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('create reservation returns 201 or 200', function () { pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
                      "try { var json = pm.response.json(); var id = json._id || json.id; if (id) pm.collectionVariables.set('reservation_id', id); } catch(e){}"
                    ],
                    "_lastExecutionId": "90b79edf-2de6-4e50-9063-1ad63a308d35"
                  }
                }
              ]
            },
            {
              "id": "957be0d6-bcec-494f-bcea-8a6efb37cfc9",
              "name": "API - POST /reservations (duplicate seat) - CONCURRENCY/NEGATIVE",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{ \"sessionId\": \"{{session_id}}\", \"seats\": [\"A1\"] }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b066037-15b2-4901-82e8-7ca8d4ca22ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('duplicate reservation should not be allowed (expect 4xx)', function () { pm.expect(pm.response.code).to.be.oneOf([400,409,422]); });"
                    ],
                    "_lastExecutionId": "336c4c69-23ee-40fb-b108-7a10c077f59f"
                  }
                }
              ]
            },
            {
              "id": "4cd1ca1e-0033-41c3-8f1d-2bcc673a11c8",
              "name": "API - GET /reservations (list)",
              "request": {
                "url": {
                  "path": [
                    "reservations"
                  ],
                  "host": [
                    "{{base_api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('list reservations returns 200', function () { pm.response.to.have.status(200); });",
                      "try { var json = pm.response.json(); pm.test('reservations returns JSON array', function(){ pm.expect(json).to.be.ok; }); } catch(e){}"
                    ],
                    "_lastExecutionId": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [
            {
              "type": "string",
              "value": "http://localhost:5000/api/v1",
              "key": "base_api"
            },
            {
              "type": "string",
              "value": "",
              "key": "auth_token"
            },
            {
              "type": "string",
              "value": "",
              "key": "movie_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "theater_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "session_id"
            },
            {
              "type": "string",
              "value": "",
              "key": "reservation_id"
            }
          ],
          "info": {
            "_postman_id": "e9f8d7c6-0000-4000-8000-000000000000",
            "name": "Cinema Challenge - Backend API Full Testing Collection",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Coleção para validar endpoints básicos e executar fluxos e casos de teste técnicos (null, boundary, injection, negative, concurrency).",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "ff0b56a5-cbb6-44d3-b4a1-325638d85502",
          "length": 18,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d731b5fb-a04e-400e-b246-ffe085307304",
          "scriptId": "17798ad0-08ad-48fe-aea0-86df51d5ad01",
          "execution": "dc7941e8-315a-415e-8061-1bb8cccd85d8"
        }
      }
    ],
    "error": null
  }
}